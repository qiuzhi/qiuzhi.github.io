<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秋至、枫以落</title>
  
  <subtitle>秋至枫必落，曲终人定散，物还在，人却非</subtitle>
  <link href="http://qiuzhi.github.io/atom.xml" rel="self"/>
  
  <link href="http://qiuzhi.github.io/"/>
  <updated>2022-06-17T09:14:35.695Z</updated>
  <id>http://qiuzhi.github.io/</id>
  
  <author>
    <name>Sam</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zsh - shell中极品</title>
    <link href="http://qiuzhi.github.io/posts/37881773.html"/>
    <id>http://qiuzhi.github.io/posts/37881773.html</id>
    <published>2022-06-14T07:27:44.000Z</published>
    <updated>2022-06-17T09:14:35.695Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-前言"><a href="#一-前言" class="headerlink" title="一 前言"></a>一 前言</h1><p><a href="https://en.wikipedia.org/wiki/Z_shell">zsh</a>是来自普林斯顿大学的学生Paul Falstad于1990年发布的，这名字来自于当时也是普林斯顿大学的一名助教Zhong Shao（后来成为耶鲁大学教授）的login-id。zsh一开始的设计初衷是为Commodore公司于1985年出的个人电脑Amiga设计一个开源的csh的子集，结果一不小心就暴走了；它在发布的时候，已经成为了ksh和tcsh的交集——既吸收了ksh在命令式可编程脚本语言上的良好逻辑设计，又吸收了tcsh丝滑般的交互体验，集众家之长，自然牛逼了。</p><p>2019年，Apple的macOS Catalina将zsh作为默认shell，取代了bash；2020年，Kali Linux（一个著名的安全领域的Linux操作系统）从2020.4版本后，也将zsh作为默认shell。</p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><p>zsh 是一个 Linux 下强大的 shell, 由于大多数 Linux 产品安装，以及默认使用bash shell, 但是丝毫不影响极客们对 zsh 的热衷, 几乎每一款 Linux 产品都包含有 zsh，通常可以用 apt-get、urpmi 或 yum 等包管理器进行安装。</p><span id="more"></span><p>zsh 具有以下主要功能：</p><ul><li>开箱即用、可编程的命令行补全功能可以帮助用户输入各种参数以及选项；</li><li>在用户启动的所有 shell 中共享命令历史；</li><li>通过扩展的文件通配符，可以不利用外部命令达到 find 命令一般展开文件名；</li><li>改进的变量与数组处理；</li><li>在缓冲区中编辑多行命令；</li><li>多种兼容模式，例如使用 &#x2F; bin&#x2F;sh 运行时可以伪装成 Bourne shell；</li><li>可以定制呈现形式的提示符；包括在屏幕右端显示信息，并在键入长命令时自动隐藏；</li><li>可加载的模块，提供其他各种支持：完整的 TCP 与 Unix 域套接字控制，FTP 客户端与扩充过的数学函数；</li><li>完全可定制化。</li></ul><p>可见，zsh缺点就是配置太麻烦，好在有一个叫做oh-my-zsh的开源项目，很好的弥补了这一缺陷，只需要修修改改配置文件，就能很顺手。</p><h1 id="二-安装配置"><a href="#二-安装配置" class="headerlink" title="二 安装配置"></a>二 安装配置</h1><h2 id="1-zsh"><a href="#1-zsh" class="headerlink" title="1 zsh"></a>1 zsh</h2><p>在 CentOS7 下，执行<code>yum</code>命令来安装需要的<code>zsh</code>原始程序与<code>git</code>程序来<code>pull</code>代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zsh git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统shell</span></span><br><span class="line"><span class="built_in">cat</span> /etc/shells</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">chsh -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更换</span></span><br><span class="line">chsh -s /bin/zsh</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">chsh -s $(<span class="built_in">which</span> zsh)</span><br></pre></td></tr></table></figure><h2 id="2-oh-my-zsh"><a href="#2-oh-my-zsh" class="headerlink" title="2 oh-my-zsh"></a>2 oh-my-zsh</h2><p>安装<a href="https://github.com/ohmyzsh/ohmyzsh">oh-my-zsh</a>脚本 (这一步需要先安装 git)。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="3-Powerline字体"><a href="#3-Powerline字体" class="headerlink" title="3 Powerline字体"></a>3 Powerline字体</h2><p>oh-my-zsh配置中采用的是Powerline字体，本地环境中若不包含该系列字体，则会出现乱码的问题。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clone</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"><span class="comment"># install</span></span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br><span class="line"><span class="comment"># clean-up a bit</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">rm</span> -rf fonts</span><br><span class="line"><span class="comment"># uninstall</span></span><br><span class="line">./uninstall.sh</span><br></pre></td></tr></table></figure><h2 id="4-配置-x2F-zshrc"><a href="#4-配置-x2F-zshrc" class="headerlink" title="4 配置 ~&#x2F;.zshrc"></a>4 配置 ~&#x2F;.zshrc</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 配置主题</span><br><span class="line">ZSH_THEME=&quot;agnoster&quot;</span><br></pre></td></tr></table></figure><h1 id="三-插件"><a href="#三-插件" class="headerlink" title="三 插件"></a>三 插件</h1><p>使用 ZSH 替换原有的 SHELL 最主要的原因就是要使用其功能强大的插件，这里只推荐安装三个插件，它们分别是 wd、zsh-syntax-highlighting、zsh-autosuggestions 。</p><p>获取安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions.git</span><br></pre></td></tr></table></figure><p>编辑 ~&#x2F;.zshrc 增加配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git wd zsh-syntax-highlighting zsh-autosuggestions)</span><br><span class="line">source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line">source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br></pre></td></tr></table></figure><h1 id="四-更多"><a href="#四-更多" class="headerlink" title="四 更多"></a>四 更多</h1><h2 id="1-vscode中设置终端"><a href="#1-vscode中设置终端" class="headerlink" title="1 vscode中设置终端"></a>1 vscode中设置终端</h2><p>在<code>setting</code>中搜索<code>terminal</code>选项，然后修改<code>Integrated: Font Family</code>的值为powerline字体即可。例如本人采用的是 Source Code Pro for Powerline 。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一-前言&quot;&gt;&lt;a href=&quot;#一-前言&quot; class=&quot;headerlink&quot; title=&quot;一 前言&quot;&gt;&lt;/a&gt;一 前言&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Z_shell&quot;&gt;zsh&lt;/a&gt;是来自普林斯顿大学的学生Paul Falstad于1990年发布的，这名字来自于当时也是普林斯顿大学的一名助教Zhong Shao（后来成为耶鲁大学教授）的login-id。zsh一开始的设计初衷是为Commodore公司于1985年出的个人电脑Amiga设计一个开源的csh的子集，结果一不小心就暴走了；它在发布的时候，已经成为了ksh和tcsh的交集——既吸收了ksh在命令式可编程脚本语言上的良好逻辑设计，又吸收了tcsh丝滑般的交互体验，集众家之长，自然牛逼了。&lt;/p&gt;
&lt;p&gt;2019年，Apple的macOS Catalina将zsh作为默认shell，取代了bash；2020年，Kali Linux（一个著名的安全领域的Linux操作系统）从2020.4版本后，也将zsh作为默认shell。&lt;/p&gt;
&lt;h2 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1 简介&quot;&gt;&lt;/a&gt;1 简介&lt;/h2&gt;&lt;p&gt;zsh 是一个 Linux 下强大的 shell, 由于大多数 Linux 产品安装，以及默认使用bash shell, 但是丝毫不影响极客们对 zsh 的热衷, 几乎每一款 Linux 产品都包含有 zsh，通常可以用 apt-get、urpmi 或 yum 等包管理器进行安装。&lt;/p&gt;</summary>
    
    
    
    <category term="Tool" scheme="http://qiuzhi.github.io/categories/Tool/"/>
    
    
    <category term="Cmder" scheme="http://qiuzhi.github.io/tags/Cmder/"/>
    
    <category term="Cmd" scheme="http://qiuzhi.github.io/tags/Cmd/"/>
    
    <category term="PowerShell" scheme="http://qiuzhi.github.io/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Cmder - 替代Cmd，打造Windows命令行军刀</title>
    <link href="http://qiuzhi.github.io/posts/9c768d05.html"/>
    <id>http://qiuzhi.github.io/posts/9c768d05.html</id>
    <published>2017-10-04T03:11:42.000Z</published>
    <updated>2022-06-13T07:38:48.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="http://cmder.net/">Cmder</a>是一款Windows下终端工具，增强命令行的存在，把conemu，msysgit和clink打包在一起，让你无需配置就能使用一个真正干净的Linux终端！她甚至还附带了漂亮的monokai配色主题。官网下载的安装包其实是压缩档, 可即压即用。你甚至可以放到USB就可以虽时带着走，连调整过的设定都会放在这个目录下，不会用到系统机码(Registry)，所以也很适合放在Dropbox&#x2F;Google Drive&#x2F;OneDrive共享于多台电脑。</p><p>下载的时候，有两个版本，分别是mini与full版；唯一的差别在于有没有内建msysgit工具，这是Git for Windows的标准配备；全安装版cmder自带了msysgit, 压缩包23M, 除了git本身这个命令之外, 里面可以使用大量的linux命令；比如grep，curl(没有wget)；像vim，grep，tar，unzip，ssh，ls，bash，perl对于爱折腾的Coder更是痛点需求。</p><span id="more"></span><h2 id="定制配置"><a href="#定制配置" class="headerlink" title="定制配置"></a>定制配置</h2><p>为了军刀更锋利，更好用，少不了折腾一下配置，让它更适合个人的使用习惯。</p><ul><li><p>打开管理员权限终端<br>  输入<code>Ctrl + t</code>，或者点击下面控制条的绿色加号，勾选”Run as administrator”</p></li><li><p>添加 cmder 到右键菜单<br>  打开管理员权限的终端，去到Cmder根目录，输入以下语句即可：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure></li><li><p>解决文字重叠问题<br>  <code>Win + ALT + P</code> 唤出设置界面 &gt; mian &gt; font &gt; monospce,去掉那勾勾即可。</p></li></ul><h2 id="Cmder常用快捷键"><a href="#Cmder常用快捷键" class="headerlink" title="Cmder常用快捷键"></a>Cmder常用快捷键</h2><ul><li>跟一般浏览器页签操作习惯一致：</li><li>可以利用Tab，自动路径补全(爽,赞！)；</li><li>可以利用Ctrl+T建立新页签；</li><li>利用Ctrl+W关闭页签;</li><li>还可以透过Ctrl+Tab切换页签;</li><li>Alt+F4：关闭所有页签</li><li>Alt+Shift+1：开启cmd.exe</li><li>Alt+Shift+2：开启powershell.exe</li><li>Alt+Shift+3：开启powershell.exe (系统管理员权限)</li><li>Ctrl+1：快速切换到第1个页签</li><li>Ctrl+n：快速切换到第n个页签( n值无上限)</li><li>Alt + enter：切换到全屏状态；</li><li>Ctr+r：历史命令搜索;</li><li>End, Home, Ctrl：Traversing text with as usual on Windows</li></ul><h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><ul><li>Cmder还增加了alias功能；他让你用短短的指令执行一些常见但指令超长又难以记忆的语法；比如 ls cls等等；在其控制台输入alias可以查看（新版本已废除）。</li><li>主控台文字自动放大缩小功能，你只要按下Ctrl+滑鼠滚轮就可以办到；如果你用支援两点触控的笔电，也可以在触控板上用两指放大的手势调整文字大小。还有：up，向上翻历史命令;</li><li>Cmder有极为简单的复制粘贴操作。Ctr+V直接粘贴；用鼠标选中你想拷贝的内容，自动就复制到剪切板；</li><li>自定义aliases：打开Cmder目录下的config文件夹，里面的<code>user-aliases.cmd</code>文件就是我们可以配置的别名文件。  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l=ls --show-control-chars -alrtF --<span class="built_in">color</span> $*</span><br></pre></td></tr></table></figure></li></ul><h2 id="问题及解决"><a href="#问题及解决" class="headerlink" title="问题及解决"></a>问题及解决</h2><h3 id="问题一：中文乱码"><a href="#问题一：中文乱码" class="headerlink" title="问题一：中文乱码"></a>问题一：中文乱码</h3><p>一般的乱码在加了下边的软件环境变量后都可以解决，在<code>Settings &gt; Startup &gt; Environment</code>中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set LC_ALL=zh_CN.UTF8</span><br></pre></td></tr></table></figure><h3 id="问题二：git-status-显示中文乱码"><a href="#问题二：git-status-显示中文乱码" class="headerlink" title="问题二：git status 显示中文乱码"></a>问题二：git status 显示中文乱码</h3><p>场景：在中文情况下<code>Git status</code>是这样的:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Your branch is up-to-date with &#x27;origin/master&#x27;.</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">    modified:   &quot;\345\274\200\351\242\230\346\212\245\345\221\212/\345\267\245\347\250\213\347\241\225\345\243\253\347\240\224\347\251\266\347\224\237\345\255\246\344\275\215\350\256\272\346\226\207\345\274\200\351\242\230\346\212\245\345\221\212\342\200\224\346\235\250\345\263\273\351\271\217.doc&quot;</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>《Cmder–Windows下命令行利器》：<a href="http://www.cnblogs.com/zqzjs/p/6188605.html">http://www.cnblogs.com/zqzjs/p/6188605.html</a></li><li>《Win下必备神器之Cmder》：<a href="https://segmentfault.com/a/1190000004408436">https://segmentfault.com/a/1190000004408436</a></li><li>《Windows 命令行增强 cmder chocolatey 配置指南》：<a href="http://www.jianshu.com/p/479d974078a7">http://www.jianshu.com/p/479d974078a7</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://cmder.net/&quot;&gt;Cmder&lt;/a&gt;是一款Windows下终端工具，增强命令行的存在，把conemu，msysgit和clink打包在一起，让你无需配置就能使用一个真正干净的Linux终端！她甚至还附带了漂亮的monokai配色主题。官网下载的安装包其实是压缩档, 可即压即用。你甚至可以放到USB就可以虽时带着走，连调整过的设定都会放在这个目录下，不会用到系统机码(Registry)，所以也很适合放在Dropbox&amp;#x2F;Google Drive&amp;#x2F;OneDrive共享于多台电脑。&lt;/p&gt;
&lt;p&gt;下载的时候，有两个版本，分别是mini与full版；唯一的差别在于有没有内建msysgit工具，这是Git for Windows的标准配备；全安装版cmder自带了msysgit, 压缩包23M, 除了git本身这个命令之外, 里面可以使用大量的linux命令；比如grep，curl(没有wget)；像vim，grep，tar，unzip，ssh，ls，bash，perl对于爱折腾的Coder更是痛点需求。&lt;/p&gt;</summary>
    
    
    
    <category term="Tool" scheme="http://qiuzhi.github.io/categories/Tool/"/>
    
    
    <category term="Cmder" scheme="http://qiuzhi.github.io/tags/Cmder/"/>
    
    <category term="Cmd" scheme="http://qiuzhi.github.io/tags/Cmd/"/>
    
    <category term="PowerShell" scheme="http://qiuzhi.github.io/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text - 个人认为最好用的文本编辑器</title>
    <link href="http://qiuzhi.github.io/posts/85e2a7e7.html"/>
    <id>http://qiuzhi.github.io/posts/85e2a7e7.html</id>
    <published>2017-09-05T13:17:47.000Z</published>
    <updated>2017-09-15T07:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="http://www.sublimetext.com/">Sublime Text</a>是付费软件，但非常之良心，只是偶尔弹出提示购买，并没有任何功能限制。作为一个跨平台的文本编辑器，支持基于Python的插件。可通过包（Package）扩充本身的功能。大多数的包使用自由软件授权发布，并由社区建置维护。</p><p>虽然Sublime Text 3一直在Beta，但很多插件已经开始放弃支持ST2了，所以推荐使用ST3。</p><span id="more"></span><ul><li><p>下载地址戳这里：<a href="http://www.sublimetext.com/3">http://www.sublimetext.com/3</a></p></li><li><p>3143可用<code>Sublime Text</code>许可证一枚</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">TwitterInc</span><br><span class="line">200 User License</span><br><span class="line">EA7E-890007</span><br><span class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</span><br><span class="line">61AA12C0 A37081C5 D0316412 4584D136</span><br><span class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</span><br><span class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</span><br><span class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F 7652EED2</span><br><span class="line">9D2D2E61 67610860 6D338B72 5CF95C69</span><br><span class="line">E36B85CC 84991F19 7575D828 470A92AB</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure></li><li><p>3126可用<code>Sublime Text</code>许可证一枚</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">—– BEGIN LICENSE —–</span><br><span class="line">Michael Barnes</span><br><span class="line">Single User License</span><br><span class="line">EA7E-821385</span><br><span class="line">8A353C41 872A0D5C DF9B2950 AFF6F667</span><br><span class="line">C458EA6D 8EA3C286 98D1D650 131A97AB</span><br><span class="line">AA919AEC EF20E143 B361B1E7 4C8B7F04</span><br><span class="line">B085E65E 2F5F5360 8489D422 FB8FC1AA</span><br><span class="line">93F6323C FD7F7544 3F39C318 D95E6480</span><br><span class="line">FCCC7561 8A4A1741 68FA4223 ADCEDE07</span><br><span class="line">200C25BE DBBC4855 C4CFB774 C5EC138C</span><br><span class="line">0FEC1CEF D9DCECEC D3A5DAD1 01316C36</span><br><span class="line">—— END LICENSE ——</span><br></pre></td></tr></table></figure></li></ul><h2 id="定制配置"><a href="#定制配置" class="headerlink" title="定制配置"></a>定制配置</h2><p>正所谓，没有插件的编辑器不是好的美工刀。<br>要有一把顺手的美工刀，总少不了定（调）制（教）。</p><ol><li><p>安装插件管理器<br> <strong>ctrl+`</strong> 打开调试窗口，在输入框内粘贴如下代码，然后回车即可自动安装，安装完成可能需要重启ST。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = &#x27;2915d1851351e5ee549c20394736b442&#x27; + &#x27;8bc59f460fa1548d1514676163dafc88&#x27;; pf =     &#x27;Package Control.sublime-package&#x27;; ipp = sublime.installed_packages_path(); urllib.request.install_opener(  urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &#x27;http:// packagecontrol.io/&#x27; + pf.replace(&#x27; &#x27;, &#x27;%20&#x27;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&#x27;Error validating   download (got %s instead of %s), please try manual install&#x27; % (dh, h)) if dh != h else open(os.path.join( ipp, pf),   &#x27;wb&#x27; ).write(by)</span><br></pre></td></tr></table></figure><p> 使用方法：工具栏 Preferences – Package Control，或者 ctrl+shift+P ，插件的安装卸载都可以在这里操作。<br> 如何安装插件详见：<a href="https://packagecontrol.io/installation">https://packagecontrol.io/installation</a></p></li><li><p>推荐安装的插件列表</p><p> 易用性：<br> ChineseLocalization：完全汉化插件<br> HTML5：HTML5标签拓展<br> JsFormat：javascript格式化<br> CSS Format：CSS格式化<br> Tag：HTML格式化<br> <a href="https://packagecontrol.io/packages/BracketHighlighter">Brackethighlighter</a>：标签对标记，以高亮显示配对括号以及当前光标所在区域<br> SideBarEnhancements：增强型侧边栏<br> BufferScroll：代码折叠状态保留<br> StyleToken：标记颜色代码<br> <a href="https://packagecontrol.io/packages/AutoPEP8">AutoPEP8</a>：格式化Python代码。<br> <a href="https://packagecontrol.io/packages/Alignment">Alignment</a>：进行智能对齐</p><p> 功能：<br> <a href="https://packagecontrol.io/packages/MarkdownEditing">Markdown Editing</a>：支持Markdown语法高亮；支持Github Favored Markdown语法；自带3个主题。本篇文章就是在此插件下完成<br> Emmet：前端神器<br> TortoiseSVN：SVN你懂的<br> QuoteHTML：把HTML拼接成js插入字符串，神器<br> Clipboard Manager：增强型剪贴板，可访问历史剪贴板记录<br> FileHeader：文件模板，可自动更新修改时间<br> AutoPrefixer：浏览器私有属性前缀补全 (Node.js依赖)<br> ColorConvert：RGBA颜色转换，十六进制颜色转换为RGBA颜色<br> Better Completion：全能代码提示<br> LiveStyle：双向更改无刷新实时预览，包含chrome插件 Emmet LiveStyle<br> SFTP：需要激活，看这里 <a href="http://mooring.iteye.com/blog/2067269">http://mooring.iteye.com/blog/2067269</a><br> jQuery：jQuery 代码提示（Better Completion已可替代此插件）</p><p> 其他：<br> <a href="https://packagecontrol.io/packages/ConvertToUTF8">ConvertToUTF8</a>：GBK编码兼容<br> <a href="https://packagecontrol.io/packages/IMESupport">IMESupport</a>：输入法不跟随时安装<br> TrailingSpaces：多余空格标记，强迫症患者福音<br> Hasher：符号转义，ctrl+shift+p 选择 Entity Encode<br> PackageResourceViewer：插件修改必备，ctrl+shift+p 调用 Open Resource</p></li><li><p>用户配置文件设置<br> 工具栏 Preferences – Settings-User 加入下面的代码：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">// 使光标更柔和</span><br><span class="line">&quot;caret_style&quot;: &quot;phase&quot;,</span><br><span class="line">// 自动移除行尾多余空格</span><br><span class="line">&quot;trim_trailing_white_space_on_save&quot;: true,</span><br><span class="line">// 文件末尾自动保留一个空行</span><br><span class="line">&quot;ensure_newline_at_eof_on_save&quot;: true,</span><br><span class="line">// 设置字体，推荐可以尝试 Yahei Consolas Hybrid</span><br><span class="line">&quot;font_face&quot;: &quot;Microsoft Yahei UI&quot;,</span><br><span class="line">// 设置字体大小</span><br><span class="line">&quot;font_size&quot;: 11,</span><br><span class="line">// 设置为 true ，禁用 Emmet 的 tab 键功能（请使用 ctrl+e），系统自带的`tab`  功能还是可圈可点的。当然也可以不设置它，以完全使用 Emmet 的 tab 补全功能</span><br><span class="line">&quot;disable_tab_abbreviations&quot;: true,</span><br><span class="line">// 把代码 tab 对齐转换为空格对齐</span><br><span class="line">&quot;translate_tabs_to_spaces&quot;: true,</span><br><span class="line">// 配合设置空格数</span><br><span class="line">&quot;tab_size&quot;: 2,</span><br><span class="line">// 用于右侧代码预览时给所在区域加上边框，方便识别</span><br><span class="line">&quot;draw_minimap_border&quot;: true,</span><br><span class="line">// 窗口失焦立即保存文件</span><br><span class="line">&quot;save_on_focus_lost&quot;: true,</span><br><span class="line">// 当前行高亮</span><br><span class="line">&quot;highlight_line&quot;: true,</span><br><span class="line">// 设置自动换行</span><br><span class="line">&quot;word_wrap&quot;: &quot;true&quot;,</span><br><span class="line">// 默认显示行号右侧的代码段闭合展开三角号</span><br><span class="line">&quot;fade_fold_buttons&quot;: false,</span><br><span class="line">// 侧边栏文件夹显示加粗，区别于文件</span><br><span class="line">&quot;bold_folder_labels&quot;: true,</span><br><span class="line">// 高亮未保存文件</span><br><span class="line">&quot;highlight_modified_tabs&quot;: true,</span><br><span class="line">// 使用 unix 风格的换行符</span><br><span class="line">&quot;default_line_ending&quot;: &quot;unix&quot;,</span><br><span class="line">// 开启选中范围内搜索，而不是整个文档</span><br><span class="line">&quot;auto_find_in_selection&quot;: true</span><br></pre></td></tr></table></figure></li><li><p>Windows系统将Sublime Text 添加到鼠标右键功能：<br> 把以下内容复制并保存到文件，重命名为：sublime_addright.reg，然后双击就可以了。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\SublimeText3]</span><br><span class="line">@=&quot;Edit with Sublime Text3&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\\Program Files\\Sublime Text 3\\sublime_text.exe,0&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\SublimeText3\command]</span><br><span class="line">@=&quot;C:\\Program Files\\Sublime Text 3\\sublime_text.exe %1&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\SublimeText3]</span><br><span class="line">@=&quot;Edit with Sublime Text3&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\\Program Files\\Sublime Text 3\\sublime_text.exe,0&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\SublimeText3\command]</span><br><span class="line">@=&quot;C:\\Program Files\\Sublime Text 3\\sublime_text.exe %1&quot;</span><br></pre></td></tr></table></figure><p> 注意：</p><ol><li>需要把代码中的Sublime的安装目录（C:\Program Files\Sublime Text 3\sublime_text.exe），替换成自已实际的Sublime安装目录。</li><li>其中，@&#x3D;”Edit with Sublime Text3” 引号中的内容为出现在鼠标右键菜单中的文字内容。</li></ol></li></ol><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><h3 id="代码段（Code-Snippets）"><a href="#代码段（Code-Snippets）" class="headerlink" title="代码段（Code Snippets）"></a>代码段（Code Snippets）</h3><p>Sublime Text 支持代码段（Code Snippet），输入代码段名称后 Tab 即可生成代码段。<br>可以通过Package Control安装第三方代码段，也可以自己创建代码段，参考<a href="http://www.hongkiat.com/blog/sublime-code-snippets/">这里</a></p><h3 id="全屏（Full-Screen）"><a href="#全屏（Full-Screen）" class="headerlink" title="全屏（Full Screen）"></a>全屏（Full Screen）</h3><p>Sublime Text 有两种全屏模式：普通全屏和无干扰全屏。<br>个人强烈建议在开启全屏前关闭菜单栏（Toggle Menu），否则全屏效果会大打折扣。</p><p><code>F11</code> 切换普通全屏<br><code>Shift + F11</code> 切换无干扰全屏</p><h3 id="格式化（Formatting）"><a href="#格式化（Formatting）" class="headerlink" title="格式化（Formatting）"></a>格式化（Formatting）</h3><p>Sublime Text 基本的手动格式化操作包括： <code>Ctrl + [</code> 向左缩进， <code>Ctrl + ]</code> 向右缩进，此外 <code>Ctrl + Shift + V</code> 可以以当前缩进粘贴代码（非常实用）。</p><h3 id="快捷键列表（Shortcuts-Cheatsheet）"><a href="#快捷键列表（Shortcuts-Cheatsheet）" class="headerlink" title="快捷键列表（Shortcuts Cheatsheet）"></a>快捷键列表（Shortcuts Cheatsheet）</h3><p>我把本文出现的Sublime Text按其类型整理在这里，以便查阅。</p><h4 id="通用（General）"><a href="#通用（General）" class="headerlink" title="通用（General）"></a>通用（General）</h4><ul><li><code>↑↓←→</code>：上下左右移动光标，注意不是不是 KJHL ！</li><li><code>Alt</code>：调出菜单</li><li><code>Ctrl + Shift + P</code>：调出命令板（Command Palette）</li><li>**Ctrl + `**：调出控制台</li></ul><h4 id="编辑（Editing）"><a href="#编辑（Editing）" class="headerlink" title="编辑（Editing）"></a>编辑（Editing）</h4><ul><li><code>Ctrl + Enter</code>：在当前行下面新增一行然后跳至该行</li><li><code>Ctrl + Shift + Enter</code>：在当前行上面增加一行并跳至该行</li><li><code>Ctrl + ←/→</code>：进行逐词移动</li><li><code>Ctrl + Shift + ←/→</code>：进行逐词选择</li><li><code>Ctrl + ↑/↓</code>：移动当前显示区域</li><li><code>Ctrl + Shift + ↑/↓</code>：移动当前行</li></ul><h4 id="选择（Selecting）"><a href="#选择（Selecting）" class="headerlink" title="选择（Selecting）"></a>选择（Selecting）</h4><ul><li><code>Ctrl + D</code>：选择当前光标所在的词并高亮该词所有出现的位置，再次 <code>Ctrl + D</code> 选择该词出现的下一个位置，在多重选词的过程中，使用 <code>Ctrl + K</code> 进行跳过，使用 <code>Ctrl + U</code> 进行回退，使用 <code>Esc</code> 退出多重编辑</li><li><code>Ctrl + Shift + L</code>：将当前选中区域打散</li><li><code>Ctrl + J</code>：把当前选中区域合并为一行</li><li><code>Ctrl + M</code>：在起始括号和结尾括号间切换</li><li><code>Ctrl + Shift + M</code>：快速选择括号间的内容</li><li><code>Ctrl + Shift + J</code>：快速选择同缩进的内容</li><li><code>Ctrl + Shift + Space</code>：快速选择当前作用域（Scope）的内容</li></ul><h4 id="查找-amp-替换（Finding-amp-Replacing）"><a href="#查找-amp-替换（Finding-amp-Replacing）" class="headerlink" title="查找&amp;替换（Finding&amp;Replacing）"></a>查找&amp;替换（Finding&amp;Replacing）</h4><ul><li><code>F3</code>：跳至当前关键字下一个位置</li><li><code>Shift + F3</code>：跳到当前关键字上一个位置</li><li><code>Alt + F3</code>：选中当前关键字出现的所有位置</li><li><code>Ctrl + F/H</code>：进行标准查找&#x2F;替换，之后：</li><li><code>Alt + C</code>：切换大小写敏感（Case-sensitive）模式</li><li><code>Alt + W</code>：切换整字匹配（Whole matching）模式</li><li><code>Alt + R</code>：切换正则匹配（Regex matching）模式</li><li><code>Ctrl + Shift + H</code>：替换当前关键字</li><li><code>Ctrl + Alt + Enter</code>：替换所有关键字匹配</li><li><code>Ctrl + Shift + F</code>：多文件搜索&amp;替换</li></ul><h4 id="跳转（Jumping）"><a href="#跳转（Jumping）" class="headerlink" title="跳转（Jumping）"></a>跳转（Jumping）</h4><ul><li><code>Ctrl + P</code>：跳转到指定文件，输入文件名后可以：<ul><li><code>@</code> 符号跳转：输入 @symbol 跳转到 symbol 符号所在的位置</li><li><code>#</code> 关键字跳转：输入 #keyword 跳转到 keyword 所在的位置</li><li><code>:</code> 行号跳转：输入 :12 跳转到文件的第12行。</li></ul></li><li><code>Ctrl + R</code>：跳转到指定符号</li><li><code>Ctrl + G</code>：跳转到指定行号</li></ul><h4 id="窗口（Window）"><a href="#窗口（Window）" class="headerlink" title="窗口（Window）"></a>窗口（Window）</h4><ul><li><code>Ctrl + Shift + N</code>：创建一个新窗口</li><li><code>Ctrl + N</code>：在当前窗口创建一个新标签</li><li><code>Ctrl + W</code>：关闭当前标签，当窗口内没有标签时会关闭该窗口</li><li><code>Ctrl + Shift + T</code>：恢复刚刚关闭的标签</li></ul><h4 id="屏幕（Screen）"><a href="#屏幕（Screen）" class="headerlink" title="屏幕（Screen）"></a>屏幕（Screen）</h4><ul><li><code>F11</code>：切换普通全屏</li><li><code>Shift + F11</code>：切换无干扰全屏</li><li><code>Alt + Shift + 2</code>：进行左右分屏</li><li><code>Alt + Shift + 8</code>：进行上下分屏</li><li><code>Alt + Shift + 5</code>：进行上下左右分屏</li><li>分屏之后，使用 <code>Ctrl + 数字键</code> 跳转到指定屏，使用 <code>Ctrl + Shift + 数字键</code> 将当前屏移动到指定屏。例如， <code>Ctrl + 1</code> 会跳转到1屏，而 <code>Ctrl + Shift + 2</code> 会将当前屏移动到2屏。</li></ul><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul><li><a href="https://packagecontrol.io/packages/MarkdownEditing">Markdown Editing</a><ul><li><p>常用快捷键（Key Bindings）<br>  <code>Ctrl + 1...6</code> 1至6级标题<br>  <code>Ctrl + Win + V</code> 或 <code>Ctrl + Win + R</code> 插入链接<br>  <code>Shift + Win + K</code> 插入图片<br>  <code>Alt + Shift + 6</code> 插入标注</p></li><li><p>代码段（Code Snippet）<br>  输入 <code>mdl + tab</code> 会自动生成下面的链接标记</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[](link)</span><br></pre></td></tr></table></figure><p>  输入 <code>mdi + tab</code> 会自动插入下面的图片标记</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>官方文档：<a href="http://www.sublimetext.com/docs/3/">http://www.sublimetext.com/docs/3/</a></li><li>官方论坛：<a href="http://www.sublimetext.com/forum/">http://www.sublimetext.com/forum/</a></li><li>Package Control：<a href="https://packagecontrol.io/">https://packagecontrol.io/</a>  大量的 Sublime Text 插件和主题。</li><li>《Sublime Text 全程指南》：<a href="http://zh.lucida.me/blog/sublime-text-complete-guide/">http://zh.lucida.me/blog/sublime-text-complete-guide/</a></li><li>《Sublime Text：学习资源篇》：<a href="http://www.jianshu.com/p/d1b9a64e2e37">http://www.jianshu.com/p/d1b9a64e2e37</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;是付费软件，但非常之良心，只是偶尔弹出提示购买，并没有任何功能限制。作为一个跨平台的文本编辑器，支持基于Python的插件。可通过包（Package）扩充本身的功能。大多数的包使用自由软件授权发布，并由社区建置维护。&lt;/p&gt;
&lt;p&gt;虽然Sublime Text 3一直在Beta，但很多插件已经开始放弃支持ST2了，所以推荐使用ST3。&lt;/p&gt;</summary>
    
    
    
    <category term="Tool" scheme="http://qiuzhi.github.io/categories/Tool/"/>
    
    
    <category term="Sublime Text" scheme="http://qiuzhi.github.io/tags/Sublime-Text/"/>
    
    <category term="Markdown" scheme="http://qiuzhi.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo - 借助GitHub搭建个人博客</title>
    <link href="http://qiuzhi.github.io/posts/a5c6484a.html"/>
    <id>http://qiuzhi.github.io/posts/a5c6484a.html</id>
    <published>2016-04-29T07:39:20.000Z</published>
    <updated>2017-09-05T01:45:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>2017-09-05更新</code> 一年多后，由于不再在封闭环境及云桌面办公，所以把Hexo得重新启用，打算用来做技术博客，或者叫Wiki，写一些自己的技术总结，按此前搭建的记录，部署起来。</p><p>有些日子没玩博客了，其实以前也一直很少去输出一些什么，但就是喜欢有一个属于个人的地方，向互联网展示一下自己的存在感！<br>I’m here，嗯，是这个意思！<br>以前和网友一起合租过服务器，也在Godady买过域名，但最后还是没坚持下来，后来折腾完之后，最实用的反而是搭梯翻墙而已。<br>好了，再多的就不扯了，这篇就是为了记录下在Windows下用Hexo在GitHub上搭建个人博客的过程，希望可以对其他朋友有所帮助。</p><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="Hexo是什么？"><a href="#Hexo是什么？" class="headerlink" title="Hexo是什么？"></a>Hexo是什么？</h3><p>Hexo是一个很好的开源静态博客生成器，基于Node.js开发，作者是台湾大学生tommy351。<br>Hexo依赖于Git与Node.js环境，就是说，你要玩Hexo，就必须先得把环境搭好，才能一起玩耍！</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>在Windows上装Git和Node.js都没什么好说的，和其它正常软件是一样的，就是下个安装包，双击打开，无脑下一步，默认选项即可，就完成了，下边附上下载包链接：</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p><a href="https://git-scm.com/" title="git-scm">https://git-scm.com/</a></p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p><a href="https://nodejs.org/" title="Node.js">https://nodejs.org/</a><br>说明一下，下的是V6.11.2 LTS，长期支持版，而非最新的V8.4.0；非前端开发，没必要安装最新版。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>正主来了，这个开始就要学会使用Git Bash来运行了！<br>如果安装的时候选择了集成到Windows的CMD中，打开CMD运行也是可行的。<br>带上了参数-g就是全局安装，所以不用纠结是在哪个目录下运行命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h4 id="初始化（若非首次安装，不需要）"><a href="#初始化（若非首次安装，不需要）" class="headerlink" title="初始化（若非首次安装，不需要）"></a>初始化（若非首次安装，不需要）</h4><p>初始化有2种方式，下边以blog文件夹为例，初始化完还需要在文件夹里安装包依赖：</p><ol><li><p>直接指定目录</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure></li><li><p>进入指定目录</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li></ol><p>终端执行命令后显示的结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[info] Copying data[info] You are almost done! Don&#x27;t forget to run `npm install` before start blogging with Hexo!</span><br></pre></td></tr></table></figure><h4 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h4><ul><li><p>安装包依赖</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ul><li><p>生成静态文件</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></li><li><p>启动本地调试环境</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></li></ul><p>至此，本地的环境算是完工了，你可以访问<code>http://localhost:4000</code>查看你的页面了！</p><h2 id="定制配置"><a href="#定制配置" class="headerlink" title="定制配置"></a>定制配置</h2><ul><li><p>在Hexo 3.0版本后<code>deploy-git</code><a href="https://github.com/hexojs/hexo-deployer-git">^1</a>被分开的，所以需要安装，安装命令如下：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>增加RSS订阅<a href="https://www.npmjs.com/package/hexo-generator-feed">^2</a>，需要安装，命令如下：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>  站点配置文件<code>_config.yml</code>增加配置如下：</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br></pre></td></tr></table></figure></li><li><p>GitHub Pages 自定义404页面非常容易，直接在source根目录下创建自己的404.html就可以，代码如下：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;content-type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html;charset=utf-8;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;all&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;index,follow&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://www.qq.com/404/search_children.js&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">homePageUrl</span>=<span class="string">&quot;http://qiuzhi.github.io/&quot;</span> <span class="attr">homePageName</span>=<span class="string">&quot;回到我的主页&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>增加<a href="https://disqus.com/">disqus</a>评论</p><ol><li>到官网注册并配置账号，得到shortname</li><li>在主题配置文件<code>_config.yml</code>相应位置修改如下：</li></ol>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">shortname</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>文章链接唯一化<br>  也许你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择。</p><p>  安装</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>  在站点配置文件中查找代码permalink，将其更改为:</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink/  # “posts/” 可自行更换</span><br></pre></td></tr></table></figure><p>  这里有个知识点：<br>  百度蜘蛛抓取网页的规则: 对于蜘蛛说网页权重越高、信用度越高抓取越频繁，例如网站的首页和内页。蜘蛛先抓取网站的首页，因为首页权重更高，并且大部分的链接都是指向首页。然后通过首页抓取网站的内页，并不是所有内页蜘蛛都会去抓取。<br>  搜索引擎认为对于一般的中小型站点，3层足够承受所有的内容了，所以蜘蛛经常抓取的内容是前三层，而超过三层的内容蜘蛛认为那些内容并不重要，所以不经常爬取。出于这个原因所以permalink后面跟着的最好不要超过2个斜杠。</p><p>  然后在站点配置文件中添加如下代码:</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>  可选择模式：<br>  crc16 &amp; hex<br>  crc16 &amp; dec<br>  crc32 &amp; hex<br>  crc32 &amp; dec<br>  可参照样例以选择：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/66c8.html</span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https://post.zz173.com/posts/8ddf18fb.html</span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure></li></ul><h2 id="发布到互联网"><a href="#发布到互联网" class="headerlink" title="发布到互联网"></a>发布到互联网</h2><ol><li><p>到<a href="https://github.com/" title="GitHub">GitHub</a>注册<br> 新建repository(仓库)，填写格式如下图所示: [yourusername].github.io<br> 将[yourusername]换成你在GitHub注册的用户名！</p></li><li><p>生成SSH Keys<br> 如何让本地git项目与远程的github建立联系？需要用到SSH Keys！</p><ol><li>使用ssh-keygen命令生成密钥对</li></ol> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;这里是你申请Github账号时的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p> 然后系统会要你输入密码：（我们输入的密码会在你提交项目的时候使用）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (emptyforno passphrase):&lt;输入加密串&gt;</span><br><span class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</span><br></pre></td></tr></table></figure><p> 从终端提示生成的文件路径中找到你生成的密钥找到<code>id_rsa.pub</code>用终端进入编辑，复制密钥。</p><ol><li>添加SSH Key到GitHub<br> 登陆GitHub网站，找到<a href="https://github.com/settings/keys">Setting-SSH and GPG keys</a>，点击<code>New SSH key</code>按钮，将复制的密钥粘贴到<code>Key</code>栏；<code>Title</code>栏填上你喜欢的标识随意标记，然后保存即可。</li><li>验证SSH是否链通</li></ol> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p> 终端执行命令后显示的结果：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxx! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p> 现在就已经可以通过SSH链接到Github了！</p><ol><li>别忘记设置提交信息</li></ol> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;xxx&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;xxx@xxx.com&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>打开站点配置文件，Hexo根目录下_config.yml：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/[yourusername]/[yourusername].github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p> 将[yourusername]换成你在GitHub注册的用户名！  </p></li><li><p>发布到Github</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></li></ol><p>至此，GitHub的环境算是完工了，你可以访问<code>http://[yourusername].github.io</code>查看你的页面了！</p><h2 id="维护"><a href="#维护" class="headerlink" title="维护"></a>维护</h2><h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul><li><p>查看node.js的版本</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v6.11.2</span><br></pre></td></tr></table></figure></li><li><p>查看node.js的版本</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="built_in">ls</span> --depth 0</span><br><span class="line">hexo-site@0.0.0 \Hexo</span><br><span class="line">├── hexo@3.3.8</span><br><span class="line">├── hexo-deployer-git@0.1.0</span><br><span class="line">├── hexo-generator-archive@0.1.4</span><br><span class="line">├── hexo-generator-category@0.1.3</span><br><span class="line">├── hexo-generator-feed@1.2.0</span><br><span class="line">├── hexo-generator-index@0.2.1</span><br><span class="line">├── hexo-generator-tag@0.2.0</span><br><span class="line">├── hexo-renderer-ejs@0.2.0</span><br><span class="line">├── hexo-renderer-marked@0.2.11</span><br><span class="line">├── hexo-renderer-stylus@0.3.3</span><br><span class="line">├── hexo-server@0.2.2</span><br><span class="line">└── hexo-util@0.6.1</span><br></pre></td></tr></table></figure></li></ul><h3 id="依赖更新"><a href="#依赖更新" class="headerlink" title="依赖更新"></a>依赖更新</h3><p>在hexo site（<code>_config.yml</code>及<code>package.json</code>的资料夹）下  </p><ul><li><p>查看是否存在新旧版本</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm outdated</span><br></pre></td></tr></table></figure></li><li><p>更新版本</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm update -S</span><br></pre></td></tr></table></figure></li></ul><p>更多请参考 <a href="https://docs.npmjs.com/">npm文档</a> 及 <a href="https://hexo.io/docs/">hexo文档</a></p><h2 id="过程中遇到的问题及解决"><a href="#过程中遇到的问题及解决" class="headerlink" title="过程中遇到的问题及解决"></a>过程中遇到的问题及解决</h2><h3 id="问题一：Cannot-find-module-‘hexo-util’"><a href="#问题一：Cannot-find-module-‘hexo-util’" class="headerlink" title="问题一：Cannot find module ‘hexo-util’"></a>问题一：Cannot find module ‘hexo-util’</h3><ul><li>问题描述：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ERROR Script load failed: themes/hexo-theme-next/scripts/tags/exturl.js  </span><br><span class="line">Error: Cannot find module <span class="string">&#x27;hexo-util&#x27;</span>  </span><br><span class="line">    at Function.Module._resolveFilename (module.js:336:15)  </span><br><span class="line">    at Function.Module._load (module.js:286:25)  </span><br><span class="line">    at Module.require (module.js:365:17)  </span><br><span class="line">    at require (/data/github/hexo/node_modules/hexo/lib/hexo/index.js:213:21)  </span><br><span class="line">    at /data/github/hexo/themes/hexo-theme-next/scripts/tags/exturl.js:7:12  </span><br><span class="line">    at /data/github/hexo/node_modules/hexo/lib/hexo/index.js:229:12  </span><br><span class="line">    at tryCatcher (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/util.js:16:23)  </span><br><span class="line">    at Promise._settlePromiseFromHandler (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:512:31)  </span><br><span class="line">    at Promise._settlePromise (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:569:18)  </span><br><span class="line">    at Promise._settlePromise0 (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:614:10)  </span><br><span class="line">    at Promise._settlePromises (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:693:18)  </span><br><span class="line">    at Promise._fulfill (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:638:18)  </span><br><span class="line">    at Promise._resolveCallback (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:432:57)  </span><br><span class="line">    at Promise._settlePromiseFromHandler (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:524:17)  </span><br><span class="line">    at Promise._settlePromise (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:569:18)  </span><br><span class="line">    at Promise._settlePromise0 (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:614:10)  </span><br><span class="line">    at Promise._settlePromises (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:693:18)  </span><br><span class="line">    at Promise._fulfill (/data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/promise.js:638:18)  </span><br><span class="line">    at /data/github/hexo/node_modules/hexo/node_modules/bluebird/js/release/nodeback.js:42:21  </span><br><span class="line">    at /data/github/hexo/node_modules/hexo/node_modules/hexo-fs/node_modules/graceful-fs/graceful-fs.js:78:16  </span><br><span class="line">    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:380:3)</span><br></pre></td></tr></table></figure><ul><li><p>解决方案<br>提示hexo-util找不到, 执行下面命令后就可以了</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-util --save</span><br></pre></td></tr></table></figure></li></ul><h3 id="问题二：could-not-read-Username-for-‘https-github-com-39-Invalid-argument"><a href="#问题二：could-not-read-Username-for-‘https-github-com-39-Invalid-argument" class="headerlink" title="问题二：could not read Username for ‘https://github.com&#39;: Invalid argument"></a>问题二：could not read Username for ‘<a href="https://github.com&/#39;">https://github.com&#39;</a>: Invalid argument</h3><ul><li>问题描述：Windows下更换Comder作为CMD终端后，遇到</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">nothing to commit, working tree clean</span><br><span class="line">bash: /dev/tty: No such device or address</span><br><span class="line">error: failed to execute prompt script (<span class="built_in">exit</span> code 1)</span><br><span class="line">fatal: could not <span class="built_in">read</span> Username <span class="keyword">for</span> <span class="string">&#x27;https://github.com&#x27;</span>: Invalid argument</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: bash: /dev/tty: No such device or address</span></span><br><span class="line"><span class="string">error: failed to execute prompt script (exit code 1)</span></span><br><span class="line"><span class="string">fatal: could not read Username for &#x27;</span>https://github.com<span class="string">&#x27;: Invalid argument</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    at ChildProcess.&lt;anonymous&gt; (E:\Dropbox\Hexo\node_modules\hexo-util\lib\spawn.js:37:17)</span></span><br><span class="line"><span class="string">    at emitTwo (events.js:106:13)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:191:7)</span></span><br><span class="line"><span class="string">    at ChildProcess.cp.emit (E:\Dropbox\Hexo\node_modules\cross-spawn\lib\enoent.js:40:29)</span></span><br><span class="line"><span class="string">    at maybeClose (internal/child_process.js:891:16)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)</span></span><br></pre></td></tr></table></figure><ul><li><p>解决方案<br>  由于新手还不明白运行的机制，使用了Cmder自带的git工具，好像只能走ssh通道去更新。进行下边两步即可</p><ol><li>那就先把hexo根目录下.deploy_git目录删除</li><li>修改_config.yml文件：  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">repository:</span> <span class="string">https://github.com/username/username.github.io.git</span></span><br></pre></td></tr></table></figure></li></ol><p>  修改为</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">repository:</span> <span class="string">git@github.com:username/username.github.io.git</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;2017-09-05更新&lt;/code&gt; 一年多后，由于不再在封闭环境及云桌面办公，所以把Hexo得重新启用，打算用来做技术博客，或者叫Wiki，写一些自己的技术总结，按此前搭建的记录，部署起来。&lt;/p&gt;
&lt;p&gt;有些日子没玩博客了，其实以前也一直很少去输出一些什么，但就是喜欢有一个属于个人的地方，向互联网展示一下自己的存在感！&lt;br&gt;I’m here，嗯，是这个意思！&lt;br&gt;以前和网友一起合租过服务器，也在Godady买过域名，但最后还是没坚持下来，后来折腾完之后，最实用的反而是搭梯翻墙而已。&lt;br&gt;好了，再多的就不扯了，这篇就是为了记录下在Windows下用Hexo在GitHub上搭建个人博客的过程，希望可以对其他朋友有所帮助。&lt;/p&gt;</summary>
    
    
    
    <category term="Technology" scheme="http://qiuzhi.github.io/categories/Technology/"/>
    
    
    <category term="Hexo" scheme="http://qiuzhi.github.io/tags/Hexo/"/>
    
    <category term="Node.js" scheme="http://qiuzhi.github.io/tags/Node-js/"/>
    
    <category term="Git" scheme="http://qiuzhi.github.io/tags/Git/"/>
    
    <category term="GitHub" scheme="http://qiuzhi.github.io/tags/GitHub/"/>
    
    <category term="Windows" scheme="http://qiuzhi.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://qiuzhi.github.io/posts/4a17b156.html"/>
    <id>http://qiuzhi.github.io/posts/4a17b156.html</id>
    <published>2016-04-28T02:35:01.000Z</published>
    <updated>2022-06-13T07:38:48.901Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
