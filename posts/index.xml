<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - 秋至、枫以落</title><link>https://blog.iqzhi.com/posts/</link><description>所有文章 | 秋至、枫以落</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="https://blog.iqzhi.com/posts/" rel="self" type="application/rss+xml"/><item><title>记一次CentOS磁盘扩容操作</title><link>https://blog.iqzhi.com/posts/centos-disk-expansion/</link><pubDate>Wed, 20 Dec 2023 09:20:05 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/centos-disk-expansion/</guid><description><![CDATA[<p>前期安装的CentOS，专门拿来挂机跑青龙、机器人等项目，当时估算的磁盘分配少了，监控程序一直处于黄色告警，虽然不影响正常使用，但有空还是处理下为好，正常的资源利用率更有利于系统稳定运行。</p>
<h2 id="引言-lvm概述">引言 LVM概述</h2>
<ul>
<li>
<p>在 Linux 系统中，我们经常使用 LVM （逻辑卷管理）的方式去管理和使用磁盘， LVM 可以动态扩容，给我们的使用带来了很多的便捷性。</p>
</li>
<li>
<p>LVM结构图如下：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=large" data-thumbnail="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=small" data-sub-html="<h2>LVM结构图</h2><p>LVM结构图</p>"><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=large 2x" sizes="auto" data-title="LVM结构图" data-alt="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png" width="50%" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></a><figcaption class="image-caption">LVM结构图</figcaption>
    </figure>
<ul>
<li>物理卷（Physical Volume，PV）
指磁盘分区或从逻辑上与磁盘分区具有同样功能的设备（如RAID），是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</li>
<li>卷组（Volume Group，VG）
类似于非LVM系统中的物理磁盘，其由一个或多个物理卷PV组成。可以在卷组上创建一个或多个LV（逻辑卷）。</li>
<li>逻辑卷（Logical Volume，LV）
类似于非LVM系统中的磁盘分区，逻辑卷建立在卷组VG之上。在逻辑卷LV之上可以建立文件系统（比如/home或者/usr等）。</li>
</ul>
</li>
</ul>
<h2 id="centos实操">CentOS实操</h2>
<p>下边主要通过截图记录本次操作，以便回顾关键点。</p>
<h3 id="一-esxi修改磁盘大小">一 ESXi修改磁盘大小</h3>
<p>打开ESXi中需要增加的虚拟机配置界面，直接修改硬盘大小（下图红框所示），点击保存，然后重启虚拟机即可。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png?size=large 2x" sizes="auto" data-title="ESXi修改原磁盘大小" data-alt="ESXi修改原磁盘大小" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>至此，ESXi操作完毕。</p>
<h3 id="二-centos扩容">二 CentOS扩容</h3>
<p>使用SSH终端连接CentOS操作后续步骤。</p>
<p><strong>核心思想：使用增加的磁盘空间创建一个新PV，跟原有的PV接接，整合到同一个LV上去，完成扩容。</strong></p>
<h4 id="观察系统是否正常识别需要扩容的空间">观察系统是否正常识别需要扩容的空间</h4>
<p>使用<code>lsblk</code>查看磁盘分配情况</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png?size=large 2x" sizes="auto" data-title="原磁盘状态1" data-alt="原磁盘状态1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>使用<code>fdisk -l</code>确认</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">fdisk -l <span class="p">|</span>grep /dev/sda</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png?size=large 2x" sizes="auto" data-title="原磁盘状态2" data-alt="原磁盘状态2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>在ESXi增加了磁盘大小重启后，再次使用<code>lsblk</code></p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png?size=large 2x" sizes="auto" data-title="增加磁盘空间后的磁盘状态1" data-alt="增加磁盘空间后的磁盘状态1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>可以看到，<code>sda</code>总大小为64G，较原有的20G多了44G。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png?size=large 2x" sizes="auto" data-title="增加磁盘空间后的磁盘状态2" data-alt="增加磁盘空间后的磁盘状态2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<h4 id="对新增加的空间进行分区格式化">对新增加的空间进行分区格式化</h4>
<p>使用<code>fdisk</code>命令启动格式化</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">fdisk /dev/sda</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png?size=large 2x" sizes="auto" data-title="格式化并新建PV" data-alt="格式化并新建PV" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>完成上述命令后，可观察终端输出，一般可能出现一些WARNING，说系统繁忙，我们直接重启虚拟机，能正常进入即成功。</p>
<h4 id="新建pv">新建PV</h4>
<p>使用<code>pvs</code>查看PV</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png?size=large 2x" sizes="auto" data-title="查看PV1" data-alt="查看PV1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>创建新PV<code>pvcreate</code></p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">pvcreate /dev/sda3</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png?size=large 2x" sizes="auto" data-title="新PV" data-alt="新PV" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>再次<code>pvs</code>确认</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png?size=large 2x" sizes="auto" data-title="查看PV2" data-alt="查看PV2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<h4 id="将新pv加入到vg">将新PV加入到VG</h4>
<p>使用<code>vgs</code>查看VG</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png?size=large 2x" sizes="auto" data-title="查看VG1" data-alt="查看VG1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>使用<code>vgextend</code>进行增加</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vgextend centos /dev/sda3</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png?size=large 2x" sizes="auto" data-title="加入VG" data-alt="加入VG" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>再次<code>vgs</code>确认</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png?size=large 2x" sizes="auto" data-title="查看VG2" data-alt="查看VG2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<h4 id="扩容lv">扩容LV</h4>
<p>使用<code>lvs</code>查看LV</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png?size=large 2x" sizes="auto" data-title="查看LV1" data-alt="查看LV1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>扩容43G空间到LV</p>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">lvextend -L +43G /dev/centos/root</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png?size=large 2x" sizes="auto" data-title="扩容LV1" data-alt="扩容LV1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>当初实际在ESXi加的是44G，但经过分区格式化后是不足44G的，在这里磁盘是有损耗的，一定要注意参数不要直接写44G，我们可以通过再加1G验证</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">lvextend -L +1G /dev/centos/root</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png?size=large 2x" sizes="auto" data-title="扩容LV2" data-alt="扩容LV2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>这次改用<code>lvdisplay</code>可以查看确认更详细的信息</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png?size=large 2x" sizes="auto" data-title="查看LV2" data-alt="查看LV2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>可以看到<code>root</code>下空间增至60G，扩容成功。</p>
<h4 id="刷新文件系统信息">刷新文件系统信息</h4>
<p>本次CentOS使用的是XFS文件系统，所以使用<code>xfs_growfs</code>刷新；若是EXT文件系统就要用<code>resize2fs</code>命令；可以通过<code>lsblk -f</code>或<code>cat /etc/fstab</code>查看文件系统。</p>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">xfs_growfs /dev/centos/root</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png?size=large 2x" sizes="auto" data-title="刷新文件系统" data-alt="刷新文件系统" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p><code>reboot</code>后重新进入，通过<code>df -h</code>查看系统空间情况，确认扩容成功。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png?size=large 2x" sizes="auto" data-title="查看最终成果" data-alt="查看最终成果" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>至此，本次扩容完成。</p>
<h2 id="总结">总结</h2>
<p>回顾此次操作，整体较为顺利，ESXi稳定好折腾再次被验证，搞清楚底层逻辑是实践的基石，能达到一点即通，多谢大佬<a href="http://www.qxzx.xyz/"target="_blank" rel="external nofollow noopener noreferrer">Frank</a>的远程指导操作，让我更深刻学习Linux基础，收益甚多！</p>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://www.jianshu.com/p/4c7acf819046"target="_blank" rel="external nofollow noopener noreferrer">LV扩容(lvextend)</a></li>
</ul>]]></description></item><item><title>Linux设置密钥登陆</title><link>https://blog.iqzhi.com/posts/linux-key-login/</link><pubDate>Tue, 12 Dec 2023 12:20:05 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/linux-key-login/</guid><description><![CDATA[<p>网上看了几篇对于Linux使用密钥登录的好文章，这里合并做个备用，如有系统安全类需求，这是一个很好的参考思路。</p>
<h2 id="方案一传统做法">方案一：传统做法</h2>
<p>转载：<a href="https://zset.cc/archives/25/"target="_blank" rel="external nofollow noopener noreferrer">【有序集合】Linux设置密钥登陆</a></p>
<p>首先在家目录下创建 <code>authorized_keys</code> 用于存放公钥，如果已有该文件可跳过</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir .ssh
</span></span><span class="line"><span class="cl">touch .ssh/authorized_keys</span></span></code></pre></td></tr></table>
</div>
</div><p>在 <code>authorized_keys</code> 文件中添加公钥，并修改文件权限</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">chmod <span class="m">600</span> .ssh/authorized_keys
</span></span><span class="line"><span class="cl">chmod <span class="m">700</span> .ssh</span></span></code></pre></td></tr></table>
</div>
</div><p>编辑 <code>/etc/ssh/sshd_config</code> 文件，进行如下设置：</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">RSAAuthentication yes
</span></span><span class="line"><span class="cl">PubkeyAuthentication yes</span></span></code></pre></td></tr></table>
</div>
</div><p>另外，请留意 root 用户能否通过 SSH 登录：</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">PermitRootLogin yes</span></span></code></pre></td></tr></table>
</div>
</div><p>当你完成全部设置，并以密钥方式登录成功后，再禁用密码登录：</p>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">PasswordAuthentication no</span></span></code></pre></td></tr></table>
</div>
</div><p>最后，重启 SSH 服务：</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">service sshd restart</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="方案二一键配置脚本">方案二：一键配置脚本</h2>
<p>转载：<a href="https://p3terx.com/archives/ssh-key-installer.html"target="_blank" rel="external nofollow noopener noreferrer">【P3TERX ZONE】SSH 密钥一键配置脚本 使用教程</a></p>
<p>对于新入手或重装后的 VPS 配置密钥登录需要创建 <code>~/.ssh</code> 目录、把公钥写入到 <code>~/.ssh/authorized_keys</code>、设置权限、禁用密码登录等操作，虽然都是很简单的基础操作，但过程麻烦且枯燥：</p>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir -p ~/.ssh
</span></span><span class="line"><span class="cl">curl -fsSL https://github.com/P3TERX.keys &gt;&gt; ~/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">chmod <span class="m">700</span> ~/.ssh
</span></span><span class="line"><span class="cl">chmod <span class="m">600</span> ~/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">sudo sed -i <span class="s2">&#34;s@.*\(PasswordAuthentication \).*@\1no@&#34;</span> /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">sudo service sshd restart</span></span></code></pre></td></tr></table>
</div>
</div><p>SSH 密钥一键配置脚本是一套用于简化 SSH 密钥配置过程的解决方案。使用它以上操作只需要一行命令：</p>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -g P3TERX -d</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="语法及选项说明">语法及选项说明</h3>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> <span class="o">[</span>选项...<span class="o">]</span> &lt;参数&gt;</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>-o - 覆盖模式，必须写在最前面才会生效</li>
<li>-g - 从 GitHub 获取公钥，参数为 GitHub 用户名</li>
<li>-u - 从 URL 获取公钥，参数为 URL</li>
<li>-f - 从本地文件获取公钥，参数为本地文件路径</li>
<li>-p - 修改 SSH 端口，参数为端口号</li>
<li>-d - 禁用密码登录</li>
</ul>
<h3 id="使用方法">使用方法</h3>
<h4 id="生成-ssh-密钥对">生成 SSH 密钥对</h4>
<p>如果没有密钥需要先生成，执行以下命令后一路回车即可。</p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh-keygen -t ecdsa -b <span class="m">521</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<blockquote>
<p>TIPS： 此方法适用于 Win­dows 10 (1803后)的 Pow­er­Shell 或 WSL，Linux 发行版和 ma­cOS 自带的终端，但不仅限于这些环境。
科普： 521 位的 ECDSA 密钥比起 RSA 密钥更安全且验证速度更快。</p>
</blockquote>
</blockquote>
<p>操作完后会在 <code>~/.ssh</code> 目录中生两个密钥文件，<code>id_ecdsa</code> 为私钥，<code>id_ecdsa.pub</code> 为公钥。公钥就是我们需要安装在远程主机上的。</p>
<blockquote>
<blockquote>
<p>科普：~符号代表用户主目录，俗称家目录。其路径与当前登陆的用户有关，在 Linux 中普通用户家目录的路径是/home/用户名，而 root 用户是/root。Win­dows 10 中路径是C:\Users\用户名。在 ma­cOS 中路径是/Users/用户名。</p>
</blockquote>
</blockquote>
<h4 id="安装公钥">安装公钥</h4>
<h5 id="从-github-获取公钥">从 GitHub 获取公钥</h5>
<p>在 GitHub 密钥管理页面 添加公钥，比如我的用户名是 P3TERX，那么在主机上输入以下命令即可：</p>
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -g P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从-url-获取公钥">从 URL 获取公钥</h5>
<p>把公钥上传到网盘，通过网盘链接获取公钥：</p>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -u https://p3terx.com/key.pub</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从本地文件获取公钥">从本地文件获取公钥</h5>
<p>通过 FTP 的方式把公钥传到 VPS 上，然后指定公钥路径：</p>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -f ~/key.pub</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="覆盖模式">覆盖模式</h4>
<p>使用覆盖模式（-o）将覆盖 /.ssh/authorized_keys 文件，之前的密钥会被完全替换掉，选项必须写在最前面才会生效，比如：</p>
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -o -g P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><p>或者</p>
<div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -og P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="禁用密码登录">禁用密码登录</h4>
<p>在确定使用密钥能正常登录后禁用密码登录：</p>
<div class="highlight" id="id-16"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -d</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="修改-ssh-端口">修改 SSH 端口</h4>
<p>把 SSH 端口修改为 2222：</p>
<div class="highlight" id="id-17"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -p <span class="m">2222</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="一键操作">一键操作</h4>
<p>安装密钥、修改端口、禁用密码登录一键操作：</p>
<div class="highlight" id="id-18"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -og P3TERX -p <span class="m">2222</span> -d</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>VPS到手基本流程</title><link>https://blog.iqzhi.com/posts/vps-basic/</link><pubDate>Sat, 18 Feb 2023 12:20:05 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/vps-basic/</guid><description><![CDATA[<p>记录玩VPS的点滴。</p>
<h2 id="一-简介">一 简介</h2>
<p>记录玩VPS的点滴。</p>
<h2 id="二-关键记录">二 关键记录</h2>
<h3 id="1-debian">1 Debian</h3>
<blockquote>
<p>适用版本：11（Bullseye）、12</p>
</blockquote>
<h4 id="11-查看内核版本">1.1 查看内核版本</h4>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">uname -r</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="12-开启ssh登录">1.2 开启SSH登录</h4>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sed -i <span class="s1">&#39;s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g&#39;</span> /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">systemctl restart ssh</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="13-更新系统包">1.3 更新系统包</h4>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">apt update -y <span class="o">&amp;&amp;</span> apt upgrade -y</span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition question open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-question-circle fa-fw" aria-hidden="true"></i><code>apt-get update失败 Err:1 http://archive.ubuntu.com/ubuntu xenial InRelease</code><i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><p>出现此问题，一般是因为DNS设置的问题，将DNS设置为 <em>8.8.8.8</em></p>
<p>通过下面命令查看DNS</p>
<div class="highlight" id="id-17"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat /etc/resolv.conf</span></span></code></pre></td></tr></table>
</div>
</div><p>通过下面命令修改DNS</p>
<div class="highlight" id="id-18"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;nameserver 8.8.8.8&#34;</span> <span class="p">|</span> tee /etc/resolv.conf &gt; /dev/null</span></span></code></pre></td></tr></table>
</div>
</div><p>修改后再次查看</p>
<div class="highlight" id="id-19"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat /etc/resolv.conf
</span></span><span class="line"><span class="cl">nameserver 8.8.8.8</span></span></code></pre></td></tr></table>
</div>
</div><p>说明设置成功。</p>
</div>
    </div>
  </div>
<h4 id="14-安装常用软件">1.4 安装常用软件</h4>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">apt install -y sudo
</span></span><span class="line"><span class="cl">apt install -y curl
</span></span><span class="line"><span class="cl">apt install -y socat</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="4-系统通用">4 系统通用</h3>
<h3 id="41-ip">4.1 IP</h3>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -4 ip.sb
</span></span><span class="line"><span class="cl">curl -6 ip.sb</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="42-网络互联">4.2 网络互联</h3>
<p><a href="https://www.itdog.cn/"target="_blank" rel="external nofollow noopener noreferrer">ITDOG</a></p>
<p><a href="http://ip.ping0.cc/"target="_blank" rel="external nofollow noopener noreferrer">PING0</a></p>
<p><a href="https://ping.pe/"target="_blank" rel="external nofollow noopener noreferrer">ping.pe</a></p>
<h3 id="43-融合怪脚本">4.3 融合怪脚本</h3>
<p>这个脚本非常不错，虽然是个融合脚本但是有很多别的脚本测不了的东西，有网络信息，IP信息，解锁信息，常用端口开放信息，硬件信息等。关于IP质量问题除了这个以外，IP信息还可以去这里查询，结果非常详细：https://ipinfo.io/</p>
<p>github项目地址：https://github.com/spiritLHLS/ecs</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>wget -qO- --no-check-certificate https://github.com/spiritLHLS/ecs/raw/main/ecs.sh<span class="o">)</span>
</span></span><span class="line"><span class="cl">bash &lt;<span class="o">(</span>wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh<span class="o">)</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="44-添加-swap">4.4 添加 SWAP</h3>
<p>swap 是 Linux 中的虚拟内存，用于扩充物理内存不足而用来存储临时数据存在的。它类似于 Windows 中的虚拟内存。在 Windows 中，只可以使用文件来当作虚拟内存。而 linux 可以文件或者分区来当作虚拟内存。</p>
<p>这个虚拟内存对于内存小的 VPS 非常有必要，可以提高我们的运行效率。<code>建议设置为实际ram的 2 倍。</code></p>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh <span class="o">&amp;&amp;</span> chmod +x box.sh <span class="o">&amp;&amp;</span> clear <span class="o">&amp;&amp;</span> ./box.sh</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="45-哪吒监控">4.5 哪吒监控</h3>
<p>从自建部署的监控管理后台直接拿命令。</p>
<h3 id="46-docker">4.6 Docker</h3>
<p>官方一键安装脚本</p>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget -qO- get.docker.com <span class="p">|</span> bash
</span></span><span class="line"><span class="cl"><span class="c1">#查看docker版本</span>
</span></span><span class="line"><span class="cl">docker -v</span></span></code></pre></td></tr></table>
</div>
</div><p>Docker-compose 安装</p>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 &gt; /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl">sudo chmod +x /usr/local/bin/docker-compose
</span></span><span class="line"><span class="cl">docker-compose --version</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="461-修改-docker-配置">4.6.1 修改 Docker 配置</h4>
<p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘（泪的教训）：</p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cat &gt; /etc/docker/daemon.json <span class="s">&lt;&lt;EOF
</span></span></span><span class="line"><span class="cl"><span class="s">{
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;log-driver&#34;: &#34;json-file&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;log-opts&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="s">        &#34;max-size&#34;: &#34;20m&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s">        &#34;max-file&#34;: &#34;3&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    },
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;ipv6&#34;: true,
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;fixed-cidr-v6&#34;: &#34;fd00:dead:beef:c0::/80&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;experimental&#34;:true,
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;ip6tables&#34;:true
</span></span></span><span class="line"><span class="cl"><span class="s">}
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span></span></span></code></pre></td></tr></table>
</div>
</div><p>然后重启 Docker 服务：</p>
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">systemctl restart docker</span></span></code></pre></td></tr></table>
</div>
</div><p>好了，我们已经安装好了 Docker 和 Docker Compose，然后就可以开始愉快的安装各种软件。</p>
<h3 id="47-zerotier">4.7 ZeroTier</h3>
<p>安装</p>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -s https://install.zerotier.com/ <span class="p">|</span> bash</span></span></code></pre></td></tr></table>
</div>
</div><p>填写网络ID，加入异地虚拟网络</p>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">zerotier-cli join <span class="o">(</span>网络ID<span class="o">)</span></span></span></code></pre></td></tr></table>
</div>
</div><p>如果看见<code>200 join OK</code>字样就说明成功加入异地虚拟局域网了。</p>
<h3 id="48-warp">4.8 Warp</h3>
<p>各大一键脚本，三选一即可。</p>
<p><a href="https://github.com/fscarmen/warp"target="_blank" rel="external nofollow noopener noreferrer">FSCARMEN</a> :</p>
<ul>
<li>首次运行
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget -N https://raw.githubusercontent.com/fscarmen/warp/main/menu.sh <span class="o">&amp;&amp;</span> bash menu.sh</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>日常维护 <code>warp</code></li>
</ul>
<p><a href="https://github.com/P3TERX/warp.sh"target="_blank" rel="external nofollow noopener noreferrer">P3TERX</a> :</p>
<ul>
<li>首次运行
<div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/warp.sh<span class="o">)</span> menu</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>日常维护 <code>bash warp.sh</code></li>
</ul>
<p><a href="https://gitlab.com/ProjectWARP/warp-go/-/tree/master/"target="_blank" rel="external nofollow noopener noreferrer">WARP-GO</a> :</p>
<ul>
<li>首次运行
<div class="highlight" id="id-16"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget -N https://raw.githubusercontent.com/fscarmen/warp/main/warp-go.sh <span class="o">&amp;&amp;</span> bash warp-go.sh</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>日常维护 <code>warp-go</code></li>
</ul>]]></description></item><item><title>UFW 防火墙使用备忘</title><link>https://blog.iqzhi.com/posts/use-ufw/</link><pubDate>Wed, 18 Oct 2023 17:29:31 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/use-ufw/</guid><description><![CDATA[<p>防火墙用于监控过滤传入和传出网络流量，可以定义一组规则用来放行或者组织特定流量。</p>
<p>很多大厂自带防火墙相当强力，但是对于大部分IDC商而言，并没有提供相应的面板，如果想要达到阻断某些流量的效果就需要自行安装并配置。比如22(ssh) 端口只允许特定IP登录。</p>
<p>Debian10 附赠UFW防火墙配置工具，用于管理iptables，不过更加友好，简单，易使用。</p>
<p>本文介绍如何使用UFW在Debian 系统中配置和管理防火墙。文章只包含基础用法。</p>
<p>本文环境：Debian11 默认root 权限</p>
<h2 id="使用ufw">使用UFW</h2>
<h3 id="安装ufw">安装UFW</h3>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">apt update
</span></span><span class="line"><span class="cl">apt install ufw</span></span></code></pre></td></tr></table>
</div>
</div><p>安装完成后可以使用 <code>ufw status verbose</code> 查看当前状态</p>
<h3 id="ufw默认策略">UFW默认策略</h3>
<p>ufw防火墙默认阻止所有传入和转发流量，允许所有出站流量。这就意味着除非打开专门的ssh端口，否则所有访问服务器的流量，包括你自己都无法连接。</p>
<h3 id="应用配置文件">应用配置文件</h3>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看软件安装包</span>
</span></span><span class="line"><span class="cl">ufw app list
</span></span><span class="line"><span class="cl"><span class="c1"># 查看相应配置文件</span>
</span></span><span class="line"><span class="cl">ufw app info <span class="s1">&#39;SSH&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="开启ufw">开启UFW</h3>
<p>一定注意，使用UFW第一项就要开启你相应的ssh 端口，<strong>否则下次将无法登录！</strong></p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 按照默认配置开启tcp 22端口</span>
</span></span><span class="line"><span class="cl">ufw allow ssh
</span></span><span class="line"><span class="cl"><span class="c1"># 如果改变了ssh 端口，如33</span>
</span></span><span class="line"><span class="cl">ufw allow 33/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 开启ufw</span>
</span></span><span class="line"><span class="cl">ufw enable</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="通用规则">通用规则</h2>
<p>通过上文的开启ssh 端口并启用UFW，其实已经可以看出一般规则</p>
<h3 id="增加规则">增加规则</h3>
<ul>
<li>开启指定端口</li>
</ul>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 端口以999为例</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 指定端口协议</span>
</span></span><span class="line"><span class="cl">ufw allow port/protoc
</span></span><span class="line"><span class="cl"><span class="c1"># 指定端口，不指定协议，将同时允许tcp，udp</span>
</span></span><span class="line"><span class="cl">ufw allow port
</span></span><span class="line"><span class="cl"><span class="c1"># 如开启999端口的udp 协议</span>
</span></span><span class="line"><span class="cl">ufw allow 999/udp</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>开启指定范围端口</li>
</ul>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 开启80，440端口</span>
</span></span><span class="line"><span class="cl">ufw allow 80,443/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 开启888-999的tcp 协议端口</span>
</span></span><span class="line"><span class="cl">ufw allow 888:999/tcp</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>指定IP访问端口</li>
</ul>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># IP 66.66.66.66 可以访问连接所有服务器端口</span>
</span></span><span class="line"><span class="cl">ufw allow from 66.66.66.66
</span></span><span class="line"><span class="cl"><span class="c1"># 只有IP 66.66.66.66 可以访问22端口进行ssh连接</span>
</span></span><span class="line"><span class="cl">ufw allow from 66.66.66.66 to any port <span class="m">22</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>子网/ip段 访问端口</li>
</ul>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 192.168.1.1 - 192.168.1.254 可以访问3306 端口</span>
</span></span><span class="line"><span class="cl">ufw allow from 192.168.1.0/24 to any port <span class="m">3306</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>拒绝访问</li>
</ul>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 只需将allow 改为deny 即可</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 如拒绝1.2.3.4 访问网页</span>
</span></span><span class="line"><span class="cl">ufw deny from 1.2.3.4 to any port 80,443</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>通过服务开启端口</li>
</ul>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 使用服务名称，如http</span>
</span></span><span class="line"><span class="cl">ufw allow http
</span></span><span class="line"><span class="cl"><span class="c1"># 指定协议端口</span>
</span></span><span class="line"><span class="cl">ufw allow 80/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 如安装了Nginx可使用</span>
</span></span><span class="line"><span class="cl">ufw allow <span class="s1">&#39;Nginx HTTP&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="查看当前已添加规则">查看当前已添加规则</h3>
<p>使用 <code>ufw status numbered</code></p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">root@gogo:~# ufw status numbered
</span></span><span class="line"><span class="cl">Status: active
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">     To                         Action      From
</span></span><span class="line"><span class="cl">     --                         ------      ----
</span></span><span class="line"><span class="cl"><span class="o">[</span> 1<span class="o">]</span> 668/tcp                    ALLOW IN    Anywhere                  
</span></span><span class="line"><span class="cl"><span class="o">[</span> 2<span class="o">]</span> 80/tcp                     ALLOW IN    Anywhere                  
</span></span><span class="line"><span class="cl"><span class="o">[</span> 3<span class="o">]</span> 668/tcp <span class="o">(</span>v6<span class="o">)</span>               ALLOW IN    Anywhere <span class="o">(</span>v6<span class="o">)</span>             
</span></span><span class="line"><span class="cl"><span class="o">[</span> 4<span class="o">]</span> 80/tcp <span class="o">(</span>v6<span class="o">)</span>                ALLOW IN    Anywhere <span class="o">(</span>v6<span class="o">)</span>   </span></span></code></pre></td></tr></table>
</div>
</div><h3 id="删除规则">删除规则</h3>
<ul>
<li>使用编号删除</li>
</ul>
<p><code>ufw delete id</code></p>
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">root@gogo:~# ufw delete <span class="m">2</span>
</span></span><span class="line"><span class="cl">Deleting:
</span></span><span class="line"><span class="cl"> allow 80/tcp
</span></span><span class="line"><span class="cl">Proceed with operation <span class="o">(</span>y<span class="p">|</span>n<span class="o">)</span>? y
</span></span><span class="line"><span class="cl">Rule deleted</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>使用端口删除</li>
</ul>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 删除端口访问</span>
</span></span><span class="line"><span class="cl">ufw delete allow 80/tcp</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="设置-ufw-状态">设置 UFW 状态</h3>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 禁用ufw</span>
</span></span><span class="line"><span class="cl">ufw disable
</span></span><span class="line"><span class="cl"><span class="c1"># 启用ufw</span>
</span></span><span class="line"><span class="cl">ufw enable</span></span></code></pre></td></tr></table>
</div>
</div><p>下一条命令为危险命令，将会<strong>删除所有活动规则</strong>，谨慎使用</p>
<p><code>ufw reset</code></p>
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">root@gogo:~# ufw reset
</span></span><span class="line"><span class="cl">Resetting all rules to installed defaults. This may disrupt existing ssh
</span></span><span class="line"><span class="cl">connections. Proceed with operation <span class="o">(</span>y<span class="p">|</span>n<span class="o">)</span>? </span></span></code></pre></td></tr></table>
</div>
</div><h2 id="问题解决">问题解决</h2>
<div class="details admonition question open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-question-circle fa-fw" aria-hidden="true"></i>Docker 在UFW中的网络处理<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><p>安装了Docker后，涉及Docker网络放通存在变化，可以查以下资料适配。</p>
<p><a href="https://github.com/chaifeng/ufw-docker#%E8%A7%A3%E5%86%B3-ufw-%E5%92%8C-docker-%E7%9A%84%E9%97%AE%E9%A2%98"target="_blank" rel="external nofollow noopener noreferrer">解决-ufw-和-docker-的问题</a></p>
<div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">#命令备忘</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#按container_name管理</span>
</span></span><span class="line"><span class="cl">ufw-docker allow nginx-proxy-manager
</span></span><span class="line"><span class="cl">ufw-docker allow nginx-proxy-manager 443/tcp
</span></span><span class="line"><span class="cl">ufw-docker delete allow nginx-proxy-manager
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#放通docker容器内部</span>
</span></span><span class="line"><span class="cl">ufw allow from 172.16.0.0/12 to any
</span></span><span class="line"><span class="cl"><span class="c1">#放通zerotier</span>
</span></span><span class="line"><span class="cl">ufw allow from 10.147.x.0/24 to any
</span></span><span class="line"><span class="cl"><span class="c1">#放通本地</span>
</span></span><span class="line"><span class="cl">ufw allow from 192.168.x.0/24 to any</span></span></code></pre></td></tr></table>
</div>
</div></div>
    </div>
  </div>]]></description></item><item><title>记一次CentOS磁盘扩容操作</title><link>https://blog.iqzhi.com/posts/centos-disk-expansion/</link><pubDate>Wed, 20 Dec 2023 09:20:05 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/centos-disk-expansion/</guid><description><![CDATA[<p>前期安装的CentOS，专门拿来挂机跑青龙、机器人等项目，当时估算的磁盘分配少了，监控程序一直处于黄色告警，虽然不影响正常使用，但有空还是处理下为好，正常的资源利用率更有利于系统稳定运行。</p>
<h2 id="引言-lvm概述">引言 LVM概述</h2>
<ul>
<li>
<p>在 Linux 系统中，我们经常使用 LVM （逻辑卷管理）的方式去管理和使用磁盘， LVM 可以动态扩容，给我们的使用带来了很多的便捷性。</p>
</li>
<li>
<p>LVM结构图如下：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=large" data-thumbnail="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=small" data-sub-html="<h2>LVM结构图</h2><p>LVM结构图</p>"><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png?size=large 2x" sizes="auto" data-title="LVM结构图" data-alt="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220105716.png" width="50%" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></a><figcaption class="image-caption">LVM结构图</figcaption>
    </figure>
<ul>
<li>物理卷（Physical Volume，PV）
指磁盘分区或从逻辑上与磁盘分区具有同样功能的设备（如RAID），是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</li>
<li>卷组（Volume Group，VG）
类似于非LVM系统中的物理磁盘，其由一个或多个物理卷PV组成。可以在卷组上创建一个或多个LV（逻辑卷）。</li>
<li>逻辑卷（Logical Volume，LV）
类似于非LVM系统中的磁盘分区，逻辑卷建立在卷组VG之上。在逻辑卷LV之上可以建立文件系统（比如/home或者/usr等）。</li>
</ul>
</li>
</ul>
<h2 id="centos实操">CentOS实操</h2>
<p>下边主要通过截图记录本次操作，以便回顾关键点。</p>
<h3 id="一-esxi修改磁盘大小">一 ESXi修改磁盘大小</h3>
<p>打开ESXi中需要增加的虚拟机配置界面，直接修改硬盘大小（下图红框所示），点击保存，然后重启虚拟机即可。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220103154.png?size=large 2x" sizes="auto" data-title="ESXi修改原磁盘大小" data-alt="ESXi修改原磁盘大小" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>至此，ESXi操作完毕。</p>
<h3 id="二-centos扩容">二 CentOS扩容</h3>
<p>使用SSH终端连接CentOS操作后续步骤。</p>
<p><strong>核心思想：使用增加的磁盘空间创建一个新PV，跟原有的PV接接，整合到同一个LV上去，完成扩容。</strong></p>
<h4 id="观察系统是否正常识别需要扩容的空间">观察系统是否正常识别需要扩容的空间</h4>
<p>使用<code>lsblk</code>查看磁盘分配情况</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110012.png?size=large 2x" sizes="auto" data-title="原磁盘状态1" data-alt="原磁盘状态1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>使用<code>fdisk -l</code>确认</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">fdisk -l <span class="p">|</span>grep /dev/sda</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110205.png?size=large 2x" sizes="auto" data-title="原磁盘状态2" data-alt="原磁盘状态2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>在ESXi增加了磁盘大小重启后，再次使用<code>lsblk</code></p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110349.png?size=large 2x" sizes="auto" data-title="增加磁盘空间后的磁盘状态1" data-alt="增加磁盘空间后的磁盘状态1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>可以看到，<code>sda</code>总大小为64G，较原有的20G多了44G。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220110847.png?size=large 2x" sizes="auto" data-title="增加磁盘空间后的磁盘状态2" data-alt="增加磁盘空间后的磁盘状态2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<h4 id="对新增加的空间进行分区格式化">对新增加的空间进行分区格式化</h4>
<p>使用<code>fdisk</code>命令启动格式化</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">fdisk /dev/sda</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220111636.png?size=large 2x" sizes="auto" data-title="格式化并新建PV" data-alt="格式化并新建PV" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>完成上述命令后，可观察终端输出，一般可能出现一些WARNING，说系统繁忙，我们直接重启虚拟机，能正常进入即成功。</p>
<h4 id="新建pv">新建PV</h4>
<p>使用<code>pvs</code>查看PV</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112527.png?size=large 2x" sizes="auto" data-title="查看PV1" data-alt="查看PV1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>创建新PV<code>pvcreate</code></p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">pvcreate /dev/sda3</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112739.png?size=large 2x" sizes="auto" data-title="新PV" data-alt="新PV" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>再次<code>pvs</code>确认</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220112936.png?size=large 2x" sizes="auto" data-title="查看PV2" data-alt="查看PV2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<h4 id="将新pv加入到vg">将新PV加入到VG</h4>
<p>使用<code>vgs</code>查看VG</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220113521.png?size=large 2x" sizes="auto" data-title="查看VG1" data-alt="查看VG1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>使用<code>vgextend</code>进行增加</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">vgextend centos /dev/sda3</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114351.png?size=large 2x" sizes="auto" data-title="加入VG" data-alt="加入VG" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>再次<code>vgs</code>确认</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114237.png?size=large 2x" sizes="auto" data-title="查看VG2" data-alt="查看VG2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<h4 id="扩容lv">扩容LV</h4>
<p>使用<code>lvs</code>查看LV</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114555.png?size=large 2x" sizes="auto" data-title="查看LV1" data-alt="查看LV1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>扩容43G空间到LV</p>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">lvextend -L +43G /dev/centos/root</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220114932.png?size=large 2x" sizes="auto" data-title="扩容LV1" data-alt="扩容LV1" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>当初实际在ESXi加的是44G，但经过分区格式化后是不足44G的，在这里磁盘是有损耗的，一定要注意参数不要直接写44G，我们可以通过再加1G验证</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">lvextend -L +1G /dev/centos/root</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115147.png?size=large 2x" sizes="auto" data-title="扩容LV2" data-alt="扩容LV2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>这次改用<code>lvdisplay</code>可以查看确认更详细的信息</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115429.png?size=large 2x" sizes="auto" data-title="查看LV2" data-alt="查看LV2" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>可以看到<code>root</code>下空间增至60G，扩容成功。</p>
<h4 id="刷新文件系统信息">刷新文件系统信息</h4>
<p>本次CentOS使用的是XFS文件系统，所以使用<code>xfs_growfs</code>刷新；若是EXT文件系统就要用<code>resize2fs</code>命令；可以通过<code>lsblk -f</code>或<code>cat /etc/fstab</code>查看文件系统。</p>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">xfs_growfs /dev/centos/root</span></span></code></pre></td></tr></table>
</div>
</div><p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115738.png?size=large 2x" sizes="auto" data-title="刷新文件系统" data-alt="刷新文件系统" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p><code>reboot</code>后重新进入，通过<code>df -h</code>查看系统空间情况，确认扩容成功。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png" srcset="https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png?size=small, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png?size=medium 1.5x, https://cdn.jsdelivr.net/gh/qiuzhi/static/blog/2023-12-20/20231220115951.png?size=large 2x" sizes="auto" data-title="查看最终成果" data-alt="查看最终成果" style="background: url(/svg/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;this.alt=this.dataset.alt;for(const i of ['style', 'data-title','data-alt','onerror','onload']){this.removeAttribute(i);}"/></p>
<p>至此，本次扩容完成。</p>
<h2 id="总结">总结</h2>
<p>回顾此次操作，整体较为顺利，ESXi稳定好折腾再次被验证，搞清楚底层逻辑是实践的基石，能达到一点即通，多谢大佬<a href="http://www.qxzx.xyz/"target="_blank" rel="external nofollow noopener noreferrer">Frank</a>的远程指导操作，让我更深刻学习Linux基础，收益甚多！</p>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://www.jianshu.com/p/4c7acf819046"target="_blank" rel="external nofollow noopener noreferrer">LV扩容(lvextend)</a></li>
</ul>]]></description></item><item><title>Linux设置密钥登陆</title><link>https://blog.iqzhi.com/posts/linux-key-login/</link><pubDate>Tue, 12 Dec 2023 12:20:05 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/linux-key-login/</guid><description><![CDATA[<p>网上看了几篇对于Linux使用密钥登录的好文章，这里合并做个备用，如有系统安全类需求，这是一个很好的参考思路。</p>
<h2 id="方案一传统做法">方案一：传统做法</h2>
<p>转载：<a href="https://zset.cc/archives/25/"target="_blank" rel="external nofollow noopener noreferrer">【有序集合】Linux设置密钥登陆</a></p>
<p>首先在家目录下创建 <code>authorized_keys</code> 用于存放公钥，如果已有该文件可跳过</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir .ssh
</span></span><span class="line"><span class="cl">touch .ssh/authorized_keys</span></span></code></pre></td></tr></table>
</div>
</div><p>在 <code>authorized_keys</code> 文件中添加公钥，并修改文件权限</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">chmod <span class="m">600</span> .ssh/authorized_keys
</span></span><span class="line"><span class="cl">chmod <span class="m">700</span> .ssh</span></span></code></pre></td></tr></table>
</div>
</div><p>编辑 <code>/etc/ssh/sshd_config</code> 文件，进行如下设置：</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">RSAAuthentication yes
</span></span><span class="line"><span class="cl">PubkeyAuthentication yes</span></span></code></pre></td></tr></table>
</div>
</div><p>另外，请留意 root 用户能否通过 SSH 登录：</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">PermitRootLogin yes</span></span></code></pre></td></tr></table>
</div>
</div><p>当你完成全部设置，并以密钥方式登录成功后，再禁用密码登录：</p>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">PasswordAuthentication no</span></span></code></pre></td></tr></table>
</div>
</div><p>最后，重启 SSH 服务：</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">service sshd restart</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="方案二一键配置脚本">方案二：一键配置脚本</h2>
<p>转载：<a href="https://p3terx.com/archives/ssh-key-installer.html"target="_blank" rel="external nofollow noopener noreferrer">【P3TERX ZONE】SSH 密钥一键配置脚本 使用教程</a></p>
<p>对于新入手或重装后的 VPS 配置密钥登录需要创建 <code>~/.ssh</code> 目录、把公钥写入到 <code>~/.ssh/authorized_keys</code>、设置权限、禁用密码登录等操作，虽然都是很简单的基础操作，但过程麻烦且枯燥：</p>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir -p ~/.ssh
</span></span><span class="line"><span class="cl">curl -fsSL https://github.com/P3TERX.keys &gt;&gt; ~/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">chmod <span class="m">700</span> ~/.ssh
</span></span><span class="line"><span class="cl">chmod <span class="m">600</span> ~/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">sudo sed -i <span class="s2">&#34;s@.*\(PasswordAuthentication \).*@\1no@&#34;</span> /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">sudo service sshd restart</span></span></code></pre></td></tr></table>
</div>
</div><p>SSH 密钥一键配置脚本是一套用于简化 SSH 密钥配置过程的解决方案。使用它以上操作只需要一行命令：</p>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -g P3TERX -d</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="语法及选项说明">语法及选项说明</h3>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> <span class="o">[</span>选项...<span class="o">]</span> &lt;参数&gt;</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>-o - 覆盖模式，必须写在最前面才会生效</li>
<li>-g - 从 GitHub 获取公钥，参数为 GitHub 用户名</li>
<li>-u - 从 URL 获取公钥，参数为 URL</li>
<li>-f - 从本地文件获取公钥，参数为本地文件路径</li>
<li>-p - 修改 SSH 端口，参数为端口号</li>
<li>-d - 禁用密码登录</li>
</ul>
<h3 id="使用方法">使用方法</h3>
<h4 id="生成-ssh-密钥对">生成 SSH 密钥对</h4>
<p>如果没有密钥需要先生成，执行以下命令后一路回车即可。</p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh-keygen -t ecdsa -b <span class="m">521</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<blockquote>
<p>TIPS： 此方法适用于 Win­dows 10 (1803后)的 Pow­er­Shell 或 WSL，Linux 发行版和 ma­cOS 自带的终端，但不仅限于这些环境。
科普： 521 位的 ECDSA 密钥比起 RSA 密钥更安全且验证速度更快。</p>
</blockquote>
</blockquote>
<p>操作完后会在 <code>~/.ssh</code> 目录中生两个密钥文件，<code>id_ecdsa</code> 为私钥，<code>id_ecdsa.pub</code> 为公钥。公钥就是我们需要安装在远程主机上的。</p>
<blockquote>
<blockquote>
<p>科普：~符号代表用户主目录，俗称家目录。其路径与当前登陆的用户有关，在 Linux 中普通用户家目录的路径是/home/用户名，而 root 用户是/root。Win­dows 10 中路径是C:\Users\用户名。在 ma­cOS 中路径是/Users/用户名。</p>
</blockquote>
</blockquote>
<h4 id="安装公钥">安装公钥</h4>
<h5 id="从-github-获取公钥">从 GitHub 获取公钥</h5>
<p>在 GitHub 密钥管理页面 添加公钥，比如我的用户名是 P3TERX，那么在主机上输入以下命令即可：</p>
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -g P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从-url-获取公钥">从 URL 获取公钥</h5>
<p>把公钥上传到网盘，通过网盘链接获取公钥：</p>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -u https://p3terx.com/key.pub</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从本地文件获取公钥">从本地文件获取公钥</h5>
<p>通过 FTP 的方式把公钥传到 VPS 上，然后指定公钥路径：</p>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -f ~/key.pub</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="覆盖模式">覆盖模式</h4>
<p>使用覆盖模式（-o）将覆盖 /.ssh/authorized_keys 文件，之前的密钥会被完全替换掉，选项必须写在最前面才会生效，比如：</p>
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -o -g P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><p>或者</p>
<div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -og P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="禁用密码登录">禁用密码登录</h4>
<p>在确定使用密钥能正常登录后禁用密码登录：</p>
<div class="highlight" id="id-16"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -d</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="修改-ssh-端口">修改 SSH 端口</h4>
<p>把 SSH 端口修改为 2222：</p>
<div class="highlight" id="id-17"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -p <span class="m">2222</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="一键操作">一键操作</h4>
<p>安装密钥、修改端口、禁用密码登录一键操作：</p>
<div class="highlight" id="id-18"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -og P3TERX -p <span class="m">2222</span> -d</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>20231111思</title><link>https://blog.iqzhi.com/posts/20231111-thoughts/</link><pubDate>Sat, 11 Nov 2023 23:47:38 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/20231111-thoughts/</guid><description><![CDATA[<p>一年一度的双11来了，你又在买什么？</p>
<p>不知道从什么时候开始，一年里有几个购物节，总得败手。比如“618”、“双十一”，国人似乎形成了思维惯性，总是觉得这天的货品是最便宜的。对比国外的“黑五”，让人购物的那股子兴奋劲无法掩饰，难以自拔。</p>
<p>殊不知，这些日子也是商家最高兴的日子，疯狂“割韭菜”，而平台，更是“盘满钵满”。终究，相对平常，降价力度还是“可圈可点”的。</p>
<p>应景之下，我也买了不少：</p>
<ol>
<li><a href="https://miaomiao.moe/"target="_blank" rel="external nofollow noopener noreferrer">喵云</a> HKT-Nat 1C 512M 10GSSD 共享300Mbps 2T流量 共享IPv4 10转发 五折 月付¥6.45</li>
<li><a href="https://dogyun.com/"target="_blank" rel="external nofollow noopener noreferrer">狗云</a> HK-MG-A 1C 1G 20G 500Mbps 1T流量 1IPv4 2IPv6 七折 年付¥70 58收</li>
<li>科学1 小杯 188G流量 年¥34.80</li>
<li>科学2 一次性（小） 150G流量 每年重置 早鸟计划 ¥14.90</li>
<li><a href="https://www.euserv.com/en/"target="_blank" rel="external nofollow noopener noreferrer">EUserv</a> VS2-free v2.1 1C 1G 10GHDD 1Gbps 1T流量 1IPv6 TG找人代付 ¥16.50</li>
</ol>
<p>计划趁国外黑五，再上一台服务器玩，关注CC、RN中。</p>
<p>其中我又得到了什么乐趣呢？我总是在反问，或许是想着便宜，不剁手对不起知道这样的资讯。</p>
<p>机器有了，能折腾的空间也更多了，可以部署一些程序玩下，其实外边的成品服务还是很贵的，很多都能找到开源自建方案，更有成就感。</p>]]></description></item><item><title>宝塔面板安装Tiny Tiny RSS</title><link>https://blog.iqzhi.com/posts/bt-install-tt-rss/</link><pubDate>Fri, 27 Oct 2023 15:28:18 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/bt-install-tt-rss/</guid><description><![CDATA[<p>物尽其用，刚好雨云免费的宝塔面板可以绑定两个域名，一个用作博客备站，另一个刚好可以玩下Tiny Tiny RSS。</p>
<p>官网最新教程已然推荐使用docker进行安装了，但雨云的虚拟主机无法安装docker，只能使用源码安装，好在基础环境宝塔面板还是简化了些操作，但是由于多年更新，此种安装方式官方wiki也不再更新，导致还是碰上了很多坑，一路坑一路填，居然成功了。</p>
<h2 id="宝塔面板新建站点">宝塔面板新建站点</h2>
<ol>
<li>
<p>面站 -&gt; PHP项目 -&gt; 添加站点，确定文件目录，选用PHP7.4版本</p>
</li>
<li>
<p>软件商店 -&gt; PHP-7.4 -&gt; 安装扩展<code>fileinfo</code></p>
</li>
</ol>
<h2 id="tiny-tiny-rss">Tiny Tiny RSS</h2>
<p><a href="https://tt-rss.org/wiki.php"target="_blank" rel="external nofollow noopener noreferrer">wiki</a></p>
<ol>
<li>按<a href="https://tt-rss.org/wiki/InstallationNotesHost"target="_blank" rel="external nofollow noopener noreferrer">教程</a>，先下载源码。</li>
</ol>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://git.tt-rss.org/fox/tt-rss.git tt-rss</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>配置<code>config.php</code></li>
</ol>
<p>网上某些教程说可以访问<code>/install</code>路径进行数据库配置安装，但访问后报了404，那些教程已然落后了。</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cp config.php-dist config.php
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 追加</span>
</span></span><span class="line"><span class="cl">putenv<span class="o">(</span><span class="s1">&#39;TTRSS_DB_TYPE=mysql&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">putenv<span class="o">(</span><span class="s1">&#39;TTRSS_DB_PORT=3306&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">putenv<span class="o">(</span><span class="s1">&#39;TTRSS_DB_HOST=dbhost&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">putenv<span class="o">(</span><span class="s1">&#39;TTRSS_DB_NAME=dbname&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">putenv<span class="o">(</span><span class="s1">&#39;TTRSS_DB_USER=dbuser&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">putenv<span class="o">(</span><span class="s1">&#39;TTRSS_DB_PASS=dbpassword&#39;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">putenv<span class="o">(</span><span class="s1">&#39;TTRSS_SELF_URL_PATH=https://example.com/tt-rss&#39;</span><span class="o">)</span><span class="p">;</span></span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>安装数据库</li>
</ol>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">php ./update.php --update-schema</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>理论上，做完这些，你就可以在相应网址看到Tiny Tiny RSS首页了。</li>
</ol>
<p>but，WTF！！！</p>
<p>我遇到了下列一系列的坑。</p>
<h2 id="踩坑过程">踩坑过程</h2>
<h3 id="坑一php多版本共存">坑一：PHP多版本共存</h3>
<div class="details admonition question open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-question-circle fa-fw" aria-hidden="true"></i>宝塔面板有两个版本的PHP，默认是更高的8以上版本，可能不支持！<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">PHP Fatal error:  Uncaught Error: Call to undefined function putenv() in /www/wwwroot/rss.izhi.tk/config.php:3
</span></span><span class="line"><span class="cl">Stack trace:
</span></span><span class="line"><span class="cl">#0 /www/wwwroot/rss.izhi.tk/include/functions.php(29): require_once()
</span></span><span class="line"><span class="cl">#1 /www/wwwroot/rss.izhi.tk/update.php(11): require_once(&#39;...&#39;)
</span></span><span class="line"><span class="cl">#2 {main}
</span></span><span class="line"><span class="cl">  thrown in /www/wwwroot/rss.izhi.tk/config.php on line 3</span></span></code></pre></td></tr></table>
</div>
</div><p>指定php命令版本</p>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">/www/server/php/74/bin/php ./update.php --update-schema</span></span></code></pre></td></tr></table>
</div>
</div></div>
    </div>
  </div>
<h3 id="坑二函数-putenv-过期">坑二：函数 <code>putenv</code> 过期</h3>
<div class="details admonition question open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-question-circle fa-fw" aria-hidden="true"></i>Exception while creating PDO object:could not find driver<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">PHP Warning:  putenv() has been disabled for security reasons in /www/wwwroot/xxx.tk/config.php on line 3</span></span></code></pre></td></tr></table>
</div>
</div><p>从日志可以看出，配置方式过时了，未生效，tt-rss使用了默认的PostgreSQL数据库，由于PHP未安装pgsql扩展而报未找到驱动错误。</p>
<p>两种处理方式，我使用1可以解决，第2种后边在网上找到，未验证：</p>
<ol>
<li>直接在<code>classes/Confing.php</code>中配置默认值</li>
</ol>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="k">private</span> <span class="k">const</span> <span class="no">_DEFAULTS</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">DB_TYPE</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;pgsql&#34;</span><span class="p">,</span>                                                                   <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">DB_HOST</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;db&#34;</span><span class="p">,</span>                                                                              <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">DB_USER</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>                                                                                        <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">DB_NAME</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>                                                                                        <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">DB_PASS</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>                                                                                        <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">DB_PORT</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;5432&#34;</span><span class="p">,</span>                                                                            <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">MYSQL_CHARSET</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;UTF8&#34;</span><span class="p">,</span>                                                              <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">SELF_URL_PATH</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;https://example.com/tt-rss&#34;</span><span class="p">,</span> <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">SINGLE_USER_MODE</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>                                                               <span class="nx">Config</span><span class="o">::</span><span class="na">T_BOOL</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">SIMPLE_UPDATE_MODE</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;&#34;</span><span class="p">,</span>                                                             <span class="nx">Config</span><span class="o">::</span><span class="na">T_BOOL</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">PHP_EXECUTABLE</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;/usr/bin/php&#34;</span><span class="p">,</span>                                     <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="nx">Config</span><span class="o">::</span><span class="na">LOCK_DIRECTORY</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s2">&#34;lock&#34;</span><span class="p">,</span>                                                             <span class="nx">Config</span><span class="o">::</span><span class="na">T_STRING</span> <span class="p">],</span></span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>去掉禁用函数<code>putenv()</code> ,改用<code>define()</code>定义,详见<a href="https://community.tt-rss.org/t/error-pdo-object-sqlstate-08006-7-could-not-connect-to-server/4369"target="_blank" rel="external nofollow noopener noreferrer">Error: PDO object:SQLSTATE[08006] [7] could not connect to server</a></li>
</ol>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// *******************************************
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// *** Database configuration (important!) ***
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// *******************************************
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_TYPE&#39;</span><span class="p">,</span> <span class="s2">&#34;pgsql&#34;</span><span class="p">);</span> <span class="c1">// or mysql
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_HOST&#39;</span><span class="p">,</span> <span class="s2">&#34;localhost&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_USER&#39;</span><span class="p">,</span> <span class="s2">&#34;fox&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_NAME&#39;</span><span class="p">,</span> <span class="s2">&#34;fox&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_PASS&#39;</span><span class="p">,</span> <span class="s2">&#34;XXXXXX&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;DB_PORT&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span> <span class="c1">// usually 5432 for PostgreSQL, 3306 for MySQL
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;MYSQL_CHARSET&#39;</span><span class="p">,</span> <span class="s1">&#39;UTF8&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Connection charset for MySQL. If you have a legacy database and/or experience
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// garbage unicode characters with this option, try setting it to a blank string.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="c1">// ***********************************
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// *** Basic settings (important!) ***
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// ***********************************
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;SELF_URL_PATH&#39;</span><span class="p">,</span> <span class="s1">&#39;https://example.org/tt-rss/&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// This should be set to a fully qualified URL used to access
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// your tt-rss instance over the net.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// The value should be a constant string literal. Please don&#39;t use
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// PHP server variables here - you might introduce security
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// issues on your install and cause hard to debug problems.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// If your tt-rss instance is behind a reverse proxy, use the external URL.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;SINGLE_USER_MODE&#39;</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Operate in single user mode, disables all functionality related to
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// multiple users and authentication. Enabling this assumes you have
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// your tt-rss directory protected by other means (e.g. http auth).
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="nx">define</span><span class="p">(</span><span class="s1">&#39;SIMPLE_UPDATE_MODE&#39;</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Enables fallback update mode where tt-rss tries to update feeds in
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// background while tt-rss is open in your browser.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// If you don&#39;t have a lot of feeds and don&#39;t want to or can&#39;t run
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// background processes while not running tt-rss, this method is generally
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// viable to keep your feeds up to date.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// Still, there are more robust (and recommended) updating methods
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// available, you can read about them here: http://tt-rss.org/wiki/UpdatingFeeds
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="o">&lt;</span><span class="nx">blah</span><span class="p">,</span> <span class="nx">etc</span><span class="p">,</span> <span class="nx">blah</span><span class="o">&gt;</span></span></span></code></pre></td></tr></table>
</div>
</div></div>
    </div>
  </div>
<h3 id="坑三非root用户运行">坑三：非root用户运行</h3>
<div class="details admonition question open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-question-circle fa-fw" aria-hidden="true"></i><ul>
<li>Please don&rsquo;t run this script as root.</li>
</ul>
<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><p>不能使用root运行，通过<code>su</code>切换指定<code>www</code>用户运行。</p>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo -u www /www/server/php/74/bin/php ./update.php --update-schema</span></span></code></pre></td></tr></table>
</div>
</div><p>以下<a href="https://community.tt-rss.org/t/cannot-run-update-php-by-any-means/2516/2"target="_blank" rel="external nofollow noopener noreferrer">备用</a></p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo -u www-data php ./update.php --daemon</span></span></code></pre></td></tr></table>
</div>
</div></div>
    </div>
  </div>]]></description></item><item><title>使用github的webhook自动触发宝塔部署的hugo博客更新</title><link>https://blog.iqzhi.com/posts/github-webhook-bt-hugo/</link><pubDate>Tue, 24 Oct 2023 16:21:21 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/github-webhook-bt-hugo/</guid><description><![CDATA[<p>博客部署到vercel上，有时终究是会遇到网络抽风，听说雨云线路还不错，也有免费用度，于是搞了台雨云的香港宝塔面板，研究如何可以达到像vercel上的自动部署效果。</p>
<h2 id="解决方案">解决方案</h2>
<p>本地提交 hugo 源码到 Github，自动触发构建并同步到宝塔指定的网站目录。</p>
<h3 id="github自动构建">Github自动构建</h3>
<p>在 Github 的 Hugo 源码仓库根目录，新建&quot;.github/workflows/xxx.yml 文件，复制以下代码。作用：借助 Github Action 实现自动构建，并同步到另外一个仓库。其中 <code>PERSONAL_TOKEN</code> 为另外仓库的访问密钥；<code>external_repository</code> 为另外仓库地址。</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Githubblog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">workflow_dispatch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">push</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">branches</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">main</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">deploy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">runs-on</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">actions/checkout@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">submodules</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">fetch-depth</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Setup Hugo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-hugo@v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">hugo-version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;latest&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">extended</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Build</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">run</span><span class="p">:</span><span class="w"> </span><span class="l">hugo --minify</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">uses</span><span class="p">:</span><span class="w"> </span><span class="l">peaceiris/actions-gh-pages@v3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">with</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">personal_token</span><span class="p">:</span><span class="w"> </span><span class="l">${{ secrets.PERSONAL_TOKEN }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">external_repository</span><span class="p">:</span><span class="w"> </span><span class="l">koobai/koobai.github.io</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">publish_dir</span><span class="p">:</span><span class="w"> </span><span class="l">./public</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="宝塔面板终端生成-git-公钥">宝塔面板终端生成 git 公钥</h3>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Git全局配置和单个仓库的用户名邮箱配置</span>
</span></span><span class="line"><span class="cl">git config --global user.name  <span class="s2">&#34;username&#34;</span>
</span></span><span class="line"><span class="cl">git config --global user.email  <span class="s2">&#34;your@email.com&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 生成git公钥用于自动拉取</span>
</span></span><span class="line"><span class="cl">ssh-keygen -t rsa -C <span class="s2">&#34;你的@email.com&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看git公钥</span>
</span></span><span class="line"><span class="cl">cat ~/.ssh/id_rsa.pub</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="添加公钥到到-github">添加公钥到到 Github</h3>
<p>头像–Settings–SSH and GPG keys–New SSH key</p>
<h3 id="宝塔面板安装-webhook-触发同步">宝塔面板安装 WebHook 触发同步</h3>
<p>打开宝塔面板商店，安装 WebHook 插件–添加执行脚本 (复制以下代码)。其中&quot;gitHttp 为需同步的 github 仓库地址&quot;，“gh-pages&quot;为仓库分支名称。</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">echo</span> <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#输出当前时间</span>
</span></span><span class="line"><span class="cl">date --date<span class="o">=</span><span class="s1">&#39;0 days ago&#39;</span> <span class="s2">&#34;+%Y-%m-%d %H:%M:%S&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Start&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#git分支名称</span>
</span></span><span class="line"><span class="cl"><span class="nv">branch</span><span class="o">=</span><span class="s2">&#34;gh-pages&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#git项目路径</span>
</span></span><span class="line"><span class="cl"><span class="nv">gitPath</span><span class="o">=</span><span class="s2">&#34;/www/wwwroot/</span><span class="nv">$1</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#git 仓库地址</span>
</span></span><span class="line"><span class="cl"><span class="nv">gitHttp</span><span class="o">=</span><span class="s2">&#34;git@github.com:yourname/yourname.github.io.git&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Web站点路径：</span><span class="nv">$gitPath</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#判断项目路径是否存在</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> -d <span class="s2">&#34;</span><span class="nv">$gitPath</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">        <span class="nb">cd</span> <span class="nv">$gitPath</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#判断是否存在git目录</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;.git&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s2">&#34;在该目录下克隆 git&#34;</span>
</span></span><span class="line"><span class="cl">                sudo git clone <span class="nv">$gitHttp</span> gittemp
</span></span><span class="line"><span class="cl">                sudo mv gittemp/.git .
</span></span><span class="line"><span class="cl">                sudo rm -rf gittemp
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;拉取最新的项目文件&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#sudo git reset --hard origin/$branch</span>
</span></span><span class="line"><span class="cl">        git remote add origin <span class="nv">$gitHttp</span>
</span></span><span class="line"><span class="cl">        git branch --set-upstream-to<span class="o">=</span>origin/<span class="nv">$branch</span> <span class="nv">$branch</span>
</span></span><span class="line"><span class="cl">        sudo git reset --hard origin/<span class="nv">$branch</span>
</span></span><span class="line"><span class="cl">        sudo git pull <span class="nv">$gitHttp</span>  2&gt;<span class="p">&amp;</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;设置目录权限&#34;</span>
</span></span><span class="line"><span class="cl">        sudo chown -R www:www <span class="nv">$gitPath</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;End&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nb">exit</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;该项目路径不存在&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s2">&#34;新建项目目录&#34;</span>
</span></span><span class="line"><span class="cl">        mkdir <span class="nv">$gitPath</span>
</span></span><span class="line"><span class="cl">        <span class="nb">cd</span> <span class="nv">$gitPath</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#判断是否存在git目录</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;.git&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">                <span class="nb">echo</span> <span class="s2">&#34;在该目录下克隆 git&#34;</span>
</span></span><span class="line"><span class="cl">                sudo git clone <span class="nv">$gitHttp</span> gittemp
</span></span><span class="line"><span class="cl">                sudo mv gittemp/.git .
</span></span><span class="line"><span class="cl">                sudo rm -rf gittemp
</span></span><span class="line"><span class="cl">        <span class="k">fi</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;拉取最新的项目文件&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#sudo git reset --hard origin/$branch</span>
</span></span><span class="line"><span class="cl">        sudo git pull gitHttp 2&gt;<span class="p">&amp;</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;设置目录权限&#34;</span>
</span></span><span class="line"><span class="cl">        sudo chown -R www:www <span class="nv">$gitPath</span>
</span></span><span class="line"><span class="cl">        <span class="nb">echo</span> <span class="s2">&#34;End&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nb">exit</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="github-网页仓库配置-webhook">Github 网页仓库配置 WebHook</h3>
<p>查看 WebHook 插件密钥，复制密钥地址。添加到 Github 需同步的仓库–Settings–Webhooks–Add webhook。其中 Content type 选择 application/json。</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">格式如：https://面板地址:面板端口/hook?access_key=密钥&amp;param=需同步到的目录名称</span></span></code></pre></td></tr></table>
</div>
</div><p>至此，步骤全部完成。当本地提交新文件到 Github hugo 源码 main 分支，就会自动触发（hugo 生成静态文件——同步到另一个仓库——同步到宝塔网站指定目录）。如果域名指定境外访问路径是 vercel 或 cloudflare 服务，当 hugo 源码更新的时候也会自动触发构建更新。</p>
<h2 id="参考">参考</h2>
<p><a href="https://koobai.com/hugo_action_webhooks/"target="_blank" rel="external nofollow noopener noreferrer">Github 自动构建 Hugo, 并通过 Webhook 同步到宝塔指定目录</a>
<a href="https://github.com/peaceiris/actions-gh-pages"target="_blank" rel="external nofollow noopener noreferrer">GitHub Pages Action</a></p>]]></description></item><item><title>UFW 防火墙使用备忘</title><link>https://blog.iqzhi.com/posts/use-ufw/</link><pubDate>Wed, 18 Oct 2023 17:29:31 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/use-ufw/</guid><description><![CDATA[<p>防火墙用于监控过滤传入和传出网络流量，可以定义一组规则用来放行或者组织特定流量。</p>
<p>很多大厂自带防火墙相当强力，但是对于大部分IDC商而言，并没有提供相应的面板，如果想要达到阻断某些流量的效果就需要自行安装并配置。比如22(ssh) 端口只允许特定IP登录。</p>
<p>Debian10 附赠UFW防火墙配置工具，用于管理iptables，不过更加友好，简单，易使用。</p>
<p>本文介绍如何使用UFW在Debian 系统中配置和管理防火墙。文章只包含基础用法。</p>
<p>本文环境：Debian11 默认root 权限</p>
<h2 id="使用ufw">使用UFW</h2>
<h3 id="安装ufw">安装UFW</h3>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">apt update
</span></span><span class="line"><span class="cl">apt install ufw</span></span></code></pre></td></tr></table>
</div>
</div><p>安装完成后可以使用 <code>ufw status verbose</code> 查看当前状态</p>
<h3 id="ufw默认策略">UFW默认策略</h3>
<p>ufw防火墙默认阻止所有传入和转发流量，允许所有出站流量。这就意味着除非打开专门的ssh端口，否则所有访问服务器的流量，包括你自己都无法连接。</p>
<h3 id="应用配置文件">应用配置文件</h3>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 查看软件安装包</span>
</span></span><span class="line"><span class="cl">ufw app list
</span></span><span class="line"><span class="cl"><span class="c1"># 查看相应配置文件</span>
</span></span><span class="line"><span class="cl">ufw app info <span class="s1">&#39;SSH&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="开启ufw">开启UFW</h3>
<p>一定注意，使用UFW第一项就要开启你相应的ssh 端口，<strong>否则下次将无法登录！</strong></p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 按照默认配置开启tcp 22端口</span>
</span></span><span class="line"><span class="cl">ufw allow ssh
</span></span><span class="line"><span class="cl"><span class="c1"># 如果改变了ssh 端口，如33</span>
</span></span><span class="line"><span class="cl">ufw allow 33/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 开启ufw</span>
</span></span><span class="line"><span class="cl">ufw enable</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="通用规则">通用规则</h2>
<p>通过上文的开启ssh 端口并启用UFW，其实已经可以看出一般规则</p>
<h3 id="增加规则">增加规则</h3>
<ul>
<li>开启指定端口</li>
</ul>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 端口以999为例</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 指定端口协议</span>
</span></span><span class="line"><span class="cl">ufw allow port/protoc
</span></span><span class="line"><span class="cl"><span class="c1"># 指定端口，不指定协议，将同时允许tcp，udp</span>
</span></span><span class="line"><span class="cl">ufw allow port
</span></span><span class="line"><span class="cl"><span class="c1"># 如开启999端口的udp 协议</span>
</span></span><span class="line"><span class="cl">ufw allow 999/udp</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>开启指定范围端口</li>
</ul>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 开启80，440端口</span>
</span></span><span class="line"><span class="cl">ufw allow 80,443/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 开启888-999的tcp 协议端口</span>
</span></span><span class="line"><span class="cl">ufw allow 888:999/tcp</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>指定IP访问端口</li>
</ul>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># IP 66.66.66.66 可以访问连接所有服务器端口</span>
</span></span><span class="line"><span class="cl">ufw allow from 66.66.66.66
</span></span><span class="line"><span class="cl"><span class="c1"># 只有IP 66.66.66.66 可以访问22端口进行ssh连接</span>
</span></span><span class="line"><span class="cl">ufw allow from 66.66.66.66 to any port <span class="m">22</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>子网/ip段 访问端口</li>
</ul>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 192.168.1.1 - 192.168.1.254 可以访问3306 端口</span>
</span></span><span class="line"><span class="cl">ufw allow from 192.168.1.0/24 to any port <span class="m">3306</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>拒绝访问</li>
</ul>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 只需将allow 改为deny 即可</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 如拒绝1.2.3.4 访问网页</span>
</span></span><span class="line"><span class="cl">ufw deny from 1.2.3.4 to any port 80,443</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>通过服务开启端口</li>
</ul>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 使用服务名称，如http</span>
</span></span><span class="line"><span class="cl">ufw allow http
</span></span><span class="line"><span class="cl"><span class="c1"># 指定协议端口</span>
</span></span><span class="line"><span class="cl">ufw allow 80/tcp
</span></span><span class="line"><span class="cl"><span class="c1"># 如安装了Nginx可使用</span>
</span></span><span class="line"><span class="cl">ufw allow <span class="s1">&#39;Nginx HTTP&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="查看当前已添加规则">查看当前已添加规则</h3>
<p>使用 <code>ufw status numbered</code></p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">root@gogo:~# ufw status numbered
</span></span><span class="line"><span class="cl">Status: active
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">     To                         Action      From
</span></span><span class="line"><span class="cl">     --                         ------      ----
</span></span><span class="line"><span class="cl"><span class="o">[</span> 1<span class="o">]</span> 668/tcp                    ALLOW IN    Anywhere                  
</span></span><span class="line"><span class="cl"><span class="o">[</span> 2<span class="o">]</span> 80/tcp                     ALLOW IN    Anywhere                  
</span></span><span class="line"><span class="cl"><span class="o">[</span> 3<span class="o">]</span> 668/tcp <span class="o">(</span>v6<span class="o">)</span>               ALLOW IN    Anywhere <span class="o">(</span>v6<span class="o">)</span>             
</span></span><span class="line"><span class="cl"><span class="o">[</span> 4<span class="o">]</span> 80/tcp <span class="o">(</span>v6<span class="o">)</span>                ALLOW IN    Anywhere <span class="o">(</span>v6<span class="o">)</span>   </span></span></code></pre></td></tr></table>
</div>
</div><h3 id="删除规则">删除规则</h3>
<ul>
<li>使用编号删除</li>
</ul>
<p><code>ufw delete id</code></p>
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">root@gogo:~# ufw delete <span class="m">2</span>
</span></span><span class="line"><span class="cl">Deleting:
</span></span><span class="line"><span class="cl"> allow 80/tcp
</span></span><span class="line"><span class="cl">Proceed with operation <span class="o">(</span>y<span class="p">|</span>n<span class="o">)</span>? y
</span></span><span class="line"><span class="cl">Rule deleted</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>使用端口删除</li>
</ul>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 删除端口访问</span>
</span></span><span class="line"><span class="cl">ufw delete allow 80/tcp</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="设置-ufw-状态">设置 UFW 状态</h3>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 禁用ufw</span>
</span></span><span class="line"><span class="cl">ufw disable
</span></span><span class="line"><span class="cl"><span class="c1"># 启用ufw</span>
</span></span><span class="line"><span class="cl">ufw enable</span></span></code></pre></td></tr></table>
</div>
</div><p>下一条命令为危险命令，将会<strong>删除所有活动规则</strong>，谨慎使用</p>
<p><code>ufw reset</code></p>
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">root@gogo:~# ufw reset
</span></span><span class="line"><span class="cl">Resetting all rules to installed defaults. This may disrupt existing ssh
</span></span><span class="line"><span class="cl">connections. Proceed with operation <span class="o">(</span>y<span class="p">|</span>n<span class="o">)</span>? </span></span></code></pre></td></tr></table>
</div>
</div><h2 id="问题解决">问题解决</h2>
<div class="details admonition question open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-question-circle fa-fw" aria-hidden="true"></i>Docker 在UFW中的网络处理<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><p>安装了Docker后，涉及Docker网络放通存在变化，可以查以下资料适配。</p>
<p><a href="https://github.com/chaifeng/ufw-docker#%E8%A7%A3%E5%86%B3-ufw-%E5%92%8C-docker-%E7%9A%84%E9%97%AE%E9%A2%98"target="_blank" rel="external nofollow noopener noreferrer">解决-ufw-和-docker-的问题</a></p>
<div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">#命令备忘</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#按container_name管理</span>
</span></span><span class="line"><span class="cl">ufw-docker allow nginx-proxy-manager
</span></span><span class="line"><span class="cl">ufw-docker allow nginx-proxy-manager 443/tcp
</span></span><span class="line"><span class="cl">ufw-docker delete allow nginx-proxy-manager
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#放通docker容器内部</span>
</span></span><span class="line"><span class="cl">ufw allow from 172.16.0.0/12 to any
</span></span><span class="line"><span class="cl"><span class="c1">#放通zerotier</span>
</span></span><span class="line"><span class="cl">ufw allow from 10.147.x.0/24 to any
</span></span><span class="line"><span class="cl"><span class="c1">#放通本地</span>
</span></span><span class="line"><span class="cl">ufw allow from 192.168.x.0/24 to any</span></span></code></pre></td></tr></table>
</div>
</div></div>
    </div>
  </div>]]></description></item><item><title>Nginx学习笔记</title><link>https://blog.iqzhi.com/posts/nginx-study/</link><pubDate>Sat, 07 Oct 2023 14:55:39 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/nginx-study/</guid><description><![CDATA[<p>Nginx的用法、配置及问题解决。</p>
<h2 id="nginx-配置-http-请求重定向到-https">nginx 配置 http 请求重定向到 https</h2>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">    listen 80;
</span></span><span class="line"><span class="cl">    server_name aaa.abc.dd;
</span></span><span class="line"><span class="cl">    rewrite ^(.*)$ https://${server_name}$1 permanent;
</span></span><span class="line"><span class="cl">}</span></span></code></pre></td></tr></table>
</div>
</div><p>这样就可以 <a href="http://aaa.abc.dd"target="_blank" rel="external nofollow noopener noreferrer">http://aaa.abc.dd</a> 转到 <a href="https://aaa.abc.dd"target="_blank" rel="external nofollow noopener noreferrer">https://aaa.abc.dd</a> 了。</p>
<h2 id="nginx防止被域名恶意解析的配置">Nginx防止被域名恶意解析的配置</h2>
<p>nginx在决定请求由哪个server块执行时，主要关注的是server块中的listen和server_name两个字段，如果根据listen指令无法得到最佳匹配，将会开始解析server_name指令。nginx会检查请求中的&quot;Host&quot;头，这个值包含了客户端实际试图请求的域名或者ip地址。nginx会根据这个值去匹配server_name指令，匹配规则会在文章中详细描述。其中有一个需要大家注意的地方是如果没有匹配到任何规则的话，则会选择可用列表中的第一个server，带来的问题就是未绑定域名或IP直接访问80和443端口会给后端逻辑服务增加压力并产生不合理的错误日志，合适的解决办法是通过在nginx的server块中添加default_server禁止未绑定域名或IP访问80和443端口过滤不合理的流量。</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">    server_name _;
</span></span><span class="line"><span class="cl">    listen 80 default_server;
</span></span><span class="line"><span class="cl">    listen 443 ssl default_server;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    ## To also support IPv6, uncomment this block
</span></span><span class="line"><span class="cl">    # listen [::]:80 default_server;
</span></span><span class="line"><span class="cl">    # listen [::]:443 ssl default_server;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    ssl_certificate &lt;path to cert&gt;;
</span></span><span class="line"><span class="cl">    ssl_certificate_key &lt;path to key&gt;;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    return 444;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    access_log /var/log/nginx/000_default.access.log;
</span></span><span class="line"><span class="cl">    error_log /var/log/nginx/000_default.error.log;
</span></span><span class="line"><span class="cl">}</span></span></code></pre></td></tr></table>
</div>
</div><p>这样在浏览器端访问的时候，浏览器会自动提示用户无法访问。</p>
<h2 id="server_name指令">Server_name指令</h2>
<p>如果根据listen指令无法得到最佳匹配,将会开始解析server_name指令.nginx会检查请求中的&quot;Host&quot;头,这个值包含了客户端实际试图请求的域名或者ip地址.nginx会根据这个值去匹配server_name指令,匹配规则如下:</p>
<p>nginx会尝试寻找一个和sever_name和Host值完全匹配的server块,如果找到多个精确匹配,则会使用第一个匹配的server块
如果没有找到精确匹配的server块,则nginx尝试找到server_name带有<em>开头的server块,如果找到多个,则选择最长匹配的server块
如果没有找到使用开头的server块,则会寻找以结尾的server块,同样,如果有多个匹配, 选择最长匹配
如果没有找到使用</em>匹配的server块,则会寻找使用正则表达式(以~开头)定义server_name的server块,如果找到多个匹配,会使用第一个匹配
如果没有找到正则表达式匹配的server块,则nginx将会选择一个匹配listen字段的default server块.每一个ip和端口组合都可以配置一个且只能配置一个默认的default_server块,如果没有的话,则会选择可用列表中的第一个server</p>
<h2 id="常用命令">常用命令</h2>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># reload nginx</span>
</span></span><span class="line"><span class="cl">nginx -t
</span></span><span class="line"><span class="cl">nginx -s reload</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>OpenWrt + OpenClash + AdGuard Home 打造家庭专用网络</title><link>https://blog.iqzhi.com/posts/openwrt-openclash-adguard-home/</link><pubDate>Mon, 11 Sep 2023 09:56:12 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/openwrt-openclash-adguard-home/</guid><description><![CDATA[<p>搞了个低功耗小玩具N5105，做软路由刚刚好。</p>
<h2 id="总体方案">总体方案</h2>
<p>家庭网络，要使用顺手，我认为要符合以下几点：</p>
<ol>
<li>光猫只桥接信号，主路由负责拨号，摆脱光猫弱鸡性能，保证并发量及持续稳定。</li>
<li>旁路由负责科学上网、VPN、DNS防污染、广告过滤等，功能只覆盖专用网络内部使用，影响面可控，保障就算旁路由宕机，也不影响大众群体网络正常访问。</li>
<li>NAS可根据储存数据的重要性分情况考虑，更建议独立机器部署，以免磁盘共用使得物理读写频繁损耗加剧，从而影响导致整体性能。</li>
</ol>
<h2 id="主路由规划">主路由规划</h2>
<p>为达到以上要求，方案自然就出来了。</p>
<ol>
<li>主路由通过 DHCP 规划网段，以一个C段（192.168.3.0/24）为例，可分网段管理：
<ul>
<li>主路由设置内网IP（192.168.3.1），DNS自动获取或手动设置均可；</li>
<li>旁路由设置静态IP（192.168.3.2），GW（192.168.3.1），DNS（223.5.5.5）；</li>
<li>正常接入网络自动获取，IP（192.168.3.101 - 192.168.3.200），GW（192.168.3.1），DNS（223.5.5.5、119.29.29.29）；</li>
<li>对家庭成员常用设备手工静态分配，IP（192.168.3.41 - 192.168.3.80），GW（192.168.3.1），DNS（223.5.5.5、119.29.29.29）；</li>
<li>个人专用网络静态分配，IP（192.168.3.91 - 192.168.3.100），GW（192.168.3.2），DNS（192.168.3.2、223.5.5.5）；</li>
<li>剩余地址按需分配使用。</li>
</ul>
</li>
</ol>
<h2 id="旁路由配置">旁路由配置</h2>
<p>最终方案：客户端→AdGuard Home(53)→OpenClash(7874)</p>
<div class="details admonition tip open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-lightbulb fa-fw" aria-hidden="true"></i>配置思路<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><ol>
<li>客户端→Dnsmasq(53)→Clash(7874)→AdGuard Home(5335)</li>
<li>客户端→Dnsmasq(53)→AdGuard Home(5335)→OpenClash(7874)</li>
<li>客户端→AdGuard Home(53)→OpenClash(7874)</li>
</ol>
<p>按思路1，在OpenClash里开启DNS劫持，让Dnsmasq把请求转发到OpenClash，然后在OpenClash里设置自定义上游DNS，把底下所有的上游DNS勾选都去掉，新建一个FallBack从AdGuard Home里获取结果；配置虽然成功了，但广告去除效果不好，根因是要屏蔽广告的地址经过OpenClash时就被代理出去了，所以不会向上游AdGuard Home去请求解析，而且AdGuard Home里客户端只能看见127.0.0.1这一条，也不够完美，所以这方案放弃；随后尝试方案2，AdGuard Home里的客户端也都能正常显示了，发现前面多了Dnsmasq似乎多余了，因为它只负责转发，所以衍生出方案3，但有个缺点，因为Dnsmasq和DHCP功能是在一起的，跳过了Dnsmasq则DHCP也不能用了，解决方案就是禁用旁路由DHCP功能，去lan接口里设置忽略此接口(不在此接口提供DHCP服务)，完美。</div>
    </div>
  </div>
<h3 id="安装openwrt系统">安装OpenWrt系统</h3>
<ul>
<li>网络-接口-Lan，底下基本设置勾选 「忽略此接口」</li>
<li>网络-DHCP/DNS-高级设置，把DNS服务器端口由53改为其他，比如5335，主要不要端口冲突，保存生效</li>
</ul>
<h3 id="openclash科学上网">OpenClash科学上网</h3>
<ul>
<li>服务-OpenClash-全局设置-DNS设置，去掉本地DNS持，勾选自定义上游DNS服务器，然后在下面自定义DNS里看够不够，有更好的DNS也可以加上去，勾选远程域名解析，应用配置</li>
</ul>
<h3 id="adguard-home广告过滤">AdGuard Home广告过滤</h3>
<ul>
<li>
<p>服务-AdGuard Home，点更新核心，点启用，重定向选择「无」，点手动设置，按如下修改，改完保存&amp;应用</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">bind_host</span><span class="p">:</span><span class="w"> </span><span class="m">0.0.0.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">bind_port</span><span class="p">:</span><span class="w"> </span><span class="m">3003</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">dns</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">bind_hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="m">0.0.0.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">53</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">upstream_dns</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="m">127.0.0.1</span><span class="p">:</span><span class="m">7874</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>配置结束，点击AdGuard Home里AdGuardHome Web:3003，可以打开ADG的管理界面，点击「过滤器-&gt;DNS封锁清单」，去网上找一些大神维护的ADG的去广告规则，加进去。</p>
</li>
</ul>]]></description></item><item><title>从Hexo迁移到Hugo</title><link>https://blog.iqzhi.com/posts/migrate-from-hexo-to-hugo/</link><pubDate>Sun, 10 Sep 2023 10:44:21 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/migrate-from-hexo-to-hugo/</guid><description><![CDATA[<p>无意网上看到大神使用Hugo建立的Blog，升起了自建的念头。</p>
<h2 id="为什么要迁移">为什么要迁移</h2>
<ol>
<li>可能是一颗喜欢折腾的心。</li>
<li>评估原来Hexo博客的情况，迁移工作不难。</li>
<li>Hugo优势更吸引，独立二进制文件，简洁高效。</li>
<li>Blog原有的文章数不多，希望有个新的开始，是时候积累点，无论是否流水账。</li>
</ol>
<h2 id="对博客发展的顾虑或是考虑过多">对博客发展的顾虑，或是考虑过多</h2>
<ol>
<li>还是不喜欢为博客配图，这个无法从根本上改善博客的观感。也可能是未找到靠谱的图库解决方案。</li>
<li>总想着以后可能又不会继续书写下去，插入太多的图片，使用框架程序内特定的语法会影响后续迁移可能，带来的不确定性。</li>
<li>所以有点感觉是放不开手脚去做，畏手畏尾，从而什么都没有做。</li>
</ol>
<h2 id="迁移发现惊喜">迁移发现惊喜</h2>
<ol>
<li>原来的Hexo博客已经折腾出后台管理解决方案了，通过Qoex可解决，但因为部署在Vercel上，大陆访问有一定的卡顿。</li>
<li>由于Qoex也支持Hugo，本计划也使用其进行后台管理，但总有不得力的感觉，谈不上喜欢或讨厌，也没有书写的兴致。</li>
<li>最后我也找到了合适的解决方案，通过VS Code可以远程管理部署在Debian上的Hugo程序代码，也方便在工作环境中远程管理，完美。</li>
</ol>
<h2 id="网站建设思路">网站建设思路</h2>
<ol>
<li>通过ZeroTier建立虚拟局域网，把家庭环境、工作环境、外出场景打通。</li>
<li>Hugo程序部署在Debian服务器上，开放SSH访问远程管理，生成环境唯一部署，减少出错可能性。</li>
<li>利用VS Code插件Remote SSH连接Debian系统上的Hugo源码目录，撰写文章。</li>
<li>VS Code终端运行命令发布预览，自带端口转发部署，可实时调试页面展示。</li>
<li>VS Code直接源码提交Github管理，使用Vercel监控提交记录，实现实时生成部署。</li>
</ol>
<h2 id="问题解决">问题解决</h2>
<div class="details admonition question open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-question-circle fa-fw" aria-hidden="true"></i>Github：通过sshkey的方式拉取代码报错kex_exchange_identification: Connection closed by remote<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content"><p>近来家庭网络进行了调整，增加了科学上网，应该是网络引发问题产生；网上查资料，通过编辑 <code>~/.ssh/config</code> 文件（没有就新增），在用户目录下的.ssh目录，添加如下内容解决：</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-md" data-lang="md"><span class="line"><span class="cl">Host github.com
</span></span><span class="line"><span class="cl">    HostName ssh.github.com
</span></span><span class="line"><span class="cl">    User git
</span></span><span class="line"><span class="cl">    Port 443</span></span></code></pre></td></tr></table>
</div>
</div></div>
    </div>
  </div>]]></description></item><item><title>Hugo Hello World</title><link>https://blog.iqzhi.com/posts/hugo-hello-world/</link><pubDate>Sat, 09 Sep 2023 17:06:11 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/hugo-hello-world/</guid><description><![CDATA[<p>Welcome to Hugo FixIt! This is your very first post.</p>
<p>Head to the documentation page linked below for a complete guidence to get started with the <a href="https://github.com/hugo-fixit/FixIt"target="_blank" rel="external nofollow noopener noreferrer">FixIt</a> theme.</p>
<a href="https://fixit.lruihao.cn/documentation/" title="documentation of FixIt Theme"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">All Documentation - FixIt</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://fixit.lruihao.cn/documentation/</span>
        </span>
      </span><svg class="cl-icon-globe" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="64" height="64"><path d="M960 512c0 249.408-203.2 448-448 448-244.778667 0-448-198.592-448-448S262.592 64 512 64s448 198.592 448 448" fill="#2196F3"></path><path d="M507.52 718.08c0-8.96-4.48-13.44-13.44-17.92-26.88-8.96-53.76-8.96-76.16-31.381333-4.48-8.96-4.48-17.92-8.96-26.88-8.96-8.96-31.36-13.44-44.8-17.92h-89.6c-13.44-4.48-22.4-22.4-31.36-35.84 0-4.48 0-13.461333-8.96-13.461334-8.96-4.458667-17.92 4.501333-26.88 0-4.48-4.458667-4.48-8.96-4.48-13.418666 0-13.461333 8.96-26.901333 17.92-35.861334 13.44-8.96 26.88 4.48 40.32 4.48 4.48 0 4.48 0 8.96 4.48 13.44 4.48 17.92 22.4 17.92 35.861334v8.96c0 4.48 4.48 4.48 8.96 4.48 4.48-22.4 4.48-44.821333 8.96-67.2 0-26.88 26.88-53.781333 49.28-62.72 8.96-4.458667 13.44 4.501333 22.4 0 26.88-8.96 94.08-35.84 80.64-71.658667-8.96-31.381333-35.84-62.698667-71.68-58.24-8.96 4.501333-13.44 8.96-22.4 13.461333-13.44 8.96-40.32 35.84-53.76 35.84-22.4-4.48-22.4-35.84-17.92-49.301333 4.48-17.92 44.8-76.138667 71.68-67.178667l17.92 17.92c8.96 4.48 22.4 4.48 35.84 4.48 4.48 0 8.96 0 13.44-4.48 4.48-4.48 4.48-4.48 4.48-8.96 0-13.44-13.44-26.901333-22.4-35.861333s-22.4-17.92-35.84-22.378667c-44.8-13.461333-116.48 4.458667-152.32 35.84-35.84 31.36-62.72 85.12-80.64 129.92-8.96 26.88-17.92 62.698667-22.4 94.08-4.48 22.4-8.96 40.32 4.48 62.698667 13.44 26.88 40.32 53.781333 67.2 71.68 17.92 13.44 53.76 13.44 71.68 35.84 13.44 17.941333 8.96 40.32 8.96 62.72 0 26.88 17.92 49.28 26.88 71.658667 4.48 13.461333 8.96 31.381333 13.44 44.821333 0 4.48 4.48 31.36 4.48 35.84 26.88 13.44 49.28 26.901333 80.64 35.861333 4.48 0 22.4-26.901333 22.4-31.381333 13.44-13.44 22.4-31.36 35.84-40.32 8.96-4.48 17.92-8.96 26.88-17.941333 8.96-8.96 13.44-26.88 17.92-40.32 4.48-8.938667 8.96-26.858667 4.48-40.298667M516.48 305.92c4.48 0 8.96-4.48 17.92-8.96 13.44-8.96 26.901333-22.4 40.32-31.36 13.461333-8.96 26.901333-22.4 35.861333-31.36 13.44-8.96 22.4-26.88 26.88-40.341333 4.48-8.96 17.941333-26.88 13.44-40.32-4.48-8.96-26.88-13.44-35.84-17.92C579.2 126.698667 547.84 122.24 512 122.24c-13.44 0-31.36 4.458667-35.84 17.92-4.48 22.4 13.44 17.92 31.36 22.4 0 0 4.48 35.84 4.48 40.32 4.48 22.421333-8.96 35.84-8.96 58.24 0 13.44 0 35.84 8.96 44.8h4.48zM892.8 619.52c4.501333-8.96 4.501333-22.4 8.96-31.36 4.501333-22.421333 4.501333-44.8 4.501333-67.2 0-44.8-4.501333-89.578667-17.92-129.92-8.96-13.44-13.461333-26.88-17.941333-40.341333-8.96-22.378667-22.4-44.8-40.32-62.698667-17.92-22.4-40.341333-85.12-80.64-67.2-13.44 4.501333-22.4 22.421333-31.36 31.381333l-26.88 40.32c-4.501333 4.48-8.96 13.44-4.501333 17.92 0 4.48 4.501333 4.48 8.96 4.48 8.96 4.501333 13.461333 4.501333 22.421333 8.96 4.48 0 8.96 4.501333 4.48 8.96 0 0 0 4.501333-4.48 4.501334-22.421333 22.4-44.8 40.32-67.2 62.698666-4.48 4.48-8.96 13.44-8.96 17.92s4.48 4.48 4.48 8.96c0 4.501333-4.48 4.501333-8.96 8.96-8.96 4.501333-17.92 8.96-22.4 13.461334-4.48 8.96 0 22.4-4.48 31.36-4.48 22.4-17.941333 40.32-26.901333 62.72-8.96 13.418667-13.418667 26.88-22.378667 40.32 0 17.92-4.501333 31.36 4.458667 44.8 22.421333 31.36 62.72 13.44 94.08 26.901333 8.96 4.458667 17.92 4.458667 22.421333 13.418667 13.418667 13.461333 13.418667 35.861333 17.92 49.301333 4.458667 17.92 8.96 35.84 17.92 53.76 4.48 22.421333 13.44 44.821333 17.92 62.72 40.341333-31.36 76.16-67.178667 103.04-112 26.88-31.424 40.341333-67.242667 53.76-103.104" fill="#CDDC39"></path></svg></span></a>
<h2 id="quick-start">Quick Start</h2>
<h3 id="prerequisites">Prerequisites</h3>
<p>Just install latest version of <a href="https://gohugo.io/installation/"target="_blank" rel="external nofollow noopener noreferrer">Hugo(&gt;= 0.109.0)</a> for your OS (Windows, Linux, macOS).</p>
<h3 id="clone-template">Clone Template</h3>
<p>Clone with your own repository url</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone --recursive git@github.com:hugo-fixit/hugo-fixit-blog-git.git</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="launching-the-site">Launching the Site</h3>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Development environment</span>
</span></span><span class="line"><span class="cl">hugo server --disableFastRender --navigateToChanged --bind 0.0.0.0
</span></span><span class="line"><span class="cl"><span class="c1"># Production environment</span>
</span></span><span class="line"><span class="cl">hugo server --disableFastRender --navigateToChanged --environment production --bind 0.0.0.0</span></span></code></pre></td></tr></table>
</div>
</div><details>
  <summary>Start via NPM script</summary>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">npm install
</span></span><span class="line"><span class="cl"><span class="c1"># build the blog</span>
</span></span><span class="line"><span class="cl">npm run build
</span></span><span class="line"><span class="cl"><span class="c1"># run a local debugging server with watch</span>
</span></span><span class="line"><span class="cl">npm run server
</span></span><span class="line"><span class="cl"><span class="c1"># run a local debugging server in production environment</span>
</span></span><span class="line"><span class="cl">npm run server:production
</span></span><span class="line"><span class="cl"><span class="c1"># update theme submodules</span>
</span></span><span class="line"><span class="cl">npm run update:theme</span></span></code></pre></td></tr></table>
</div>
</div></details>
<h3 id="build-the-site">Build the Site</h3>
<p>When your site is ready to deploy, run the following command:</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">hugo</span></span></code></pre></td></tr></table>
</div>
</div><p>For a complete quick start, see this <a href="https://fixit.lruihao.cn/documentation/getting-started/"target="_blank" rel="external nofollow noopener noreferrer">page</a>.</p>
<h2 id="questions-ideas-bugs-pull-requests">Questions, ideas, bugs, pull requests</h2>
<p>All feedback is welcome! Head over to the <a href="https://github.com/hugo-fixit/FixIt/issues"target="_blank" rel="external nofollow noopener noreferrer">issues</a> or <a href="https://github.com/hugo-fixit/FixIt/discussions"target="_blank" rel="external nofollow noopener noreferrer">discussions</a> tracker.</p>]]></description></item></channel></rss>