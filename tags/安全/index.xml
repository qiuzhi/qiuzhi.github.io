<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>安全 - 标签 - 秋至、枫以落</title><link>https://blog.iqzhi.com/tags/%E5%AE%89%E5%85%A8/</link><description>安全 - 标签 - 秋至、枫以落</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 12 Dec 2023 12:20:05 +0800</lastBuildDate><atom:link href="https://blog.iqzhi.com/tags/%E5%AE%89%E5%85%A8/" rel="self" type="application/rss+xml"/><item><title>Linux设置密钥登陆</title><link>https://blog.iqzhi.com/posts/linux-key-login/</link><pubDate>Tue, 12 Dec 2023 12:20:05 +0800</pubDate><author>枫</author><guid>https://blog.iqzhi.com/posts/linux-key-login/</guid><description><![CDATA[<p>网上看了几篇对于Linux使用密钥登录的好文章，这里合并做个备用，如有系统安全类需求，这是一个很好的参考思路。</p>
<h2 id="方案一传统做法">方案一：传统做法</h2>
<p>转载：<a href="https://zset.cc/archives/25/"target="_blank" rel="external nofollow noopener noreferrer">【有序集合】Linux设置密钥登陆</a></p>
<p>首先在家目录下创建 <code>authorized_keys</code> 用于存放公钥，如果已有该文件可跳过</p>
<div class="highlight" id="id-1"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir .ssh
</span></span><span class="line"><span class="cl">touch .ssh/authorized_keys</span></span></code></pre></td></tr></table>
</div>
</div><p>在 <code>authorized_keys</code> 文件中添加公钥，并修改文件权限</p>
<div class="highlight" id="id-2"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">chmod <span class="m">600</span> .ssh/authorized_keys
</span></span><span class="line"><span class="cl">chmod <span class="m">700</span> .ssh</span></span></code></pre></td></tr></table>
</div>
</div><p>编辑 <code>/etc/ssh/sshd_config</code> 文件，进行如下设置：</p>
<div class="highlight" id="id-3"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">RSAAuthentication yes
</span></span><span class="line"><span class="cl">PubkeyAuthentication yes</span></span></code></pre></td></tr></table>
</div>
</div><p>另外，请留意 root 用户能否通过 SSH 登录：</p>
<div class="highlight" id="id-4"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">PermitRootLogin yes</span></span></code></pre></td></tr></table>
</div>
</div><p>当你完成全部设置，并以密钥方式登录成功后，再禁用密码登录：</p>
<div class="highlight" id="id-5"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">PasswordAuthentication no</span></span></code></pre></td></tr></table>
</div>
</div><p>最后，重启 SSH 服务：</p>
<div class="highlight" id="id-6"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">service sshd restart</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="方案二一键配置脚本">方案二：一键配置脚本</h2>
<p>转载：<a href="https://p3terx.com/archives/ssh-key-installer.html"target="_blank" rel="external nofollow noopener noreferrer">【P3TERX ZONE】SSH 密钥一键配置脚本 使用教程</a></p>
<p>对于新入手或重装后的 VPS 配置密钥登录需要创建 <code>~/.ssh</code> 目录、把公钥写入到 <code>~/.ssh/authorized_keys</code>、设置权限、禁用密码登录等操作，虽然都是很简单的基础操作，但过程麻烦且枯燥：</p>
<div class="highlight" id="id-7"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir -p ~/.ssh
</span></span><span class="line"><span class="cl">curl -fsSL https://github.com/P3TERX.keys &gt;&gt; ~/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">chmod <span class="m">700</span> ~/.ssh
</span></span><span class="line"><span class="cl">chmod <span class="m">600</span> ~/.ssh/authorized_keys
</span></span><span class="line"><span class="cl">sudo sed -i <span class="s2">&#34;s@.*\(PasswordAuthentication \).*@\1no@&#34;</span> /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">sudo service sshd restart</span></span></code></pre></td></tr></table>
</div>
</div><p>SSH 密钥一键配置脚本是一套用于简化 SSH 密钥配置过程的解决方案。使用它以上操作只需要一行命令：</p>
<div class="highlight" id="id-8"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -g P3TERX -d</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="语法及选项说明">语法及选项说明</h3>
<div class="highlight" id="id-9"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> <span class="o">[</span>选项...<span class="o">]</span> &lt;参数&gt;</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>-o - 覆盖模式，必须写在最前面才会生效</li>
<li>-g - 从 GitHub 获取公钥，参数为 GitHub 用户名</li>
<li>-u - 从 URL 获取公钥，参数为 URL</li>
<li>-f - 从本地文件获取公钥，参数为本地文件路径</li>
<li>-p - 修改 SSH 端口，参数为端口号</li>
<li>-d - 禁用密码登录</li>
</ul>
<h3 id="使用方法">使用方法</h3>
<h4 id="生成-ssh-密钥对">生成 SSH 密钥对</h4>
<p>如果没有密钥需要先生成，执行以下命令后一路回车即可。</p>
<div class="highlight" id="id-10"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh-keygen -t ecdsa -b <span class="m">521</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<blockquote>
<p>TIPS： 此方法适用于 Win­dows 10 (1803后)的 Pow­er­Shell 或 WSL，Linux 发行版和 ma­cOS 自带的终端，但不仅限于这些环境。
科普： 521 位的 ECDSA 密钥比起 RSA 密钥更安全且验证速度更快。</p>
</blockquote>
</blockquote>
<p>操作完后会在 <code>~/.ssh</code> 目录中生两个密钥文件，<code>id_ecdsa</code> 为私钥，<code>id_ecdsa.pub</code> 为公钥。公钥就是我们需要安装在远程主机上的。</p>
<blockquote>
<blockquote>
<p>科普：~符号代表用户主目录，俗称家目录。其路径与当前登陆的用户有关，在 Linux 中普通用户家目录的路径是/home/用户名，而 root 用户是/root。Win­dows 10 中路径是C:\Users\用户名。在 ma­cOS 中路径是/Users/用户名。</p>
</blockquote>
</blockquote>
<h4 id="安装公钥">安装公钥</h4>
<h5 id="从-github-获取公钥">从 GitHub 获取公钥</h5>
<p>在 GitHub 密钥管理页面 添加公钥，比如我的用户名是 P3TERX，那么在主机上输入以下命令即可：</p>
<div class="highlight" id="id-11"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -g P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从-url-获取公钥">从 URL 获取公钥</h5>
<p>把公钥上传到网盘，通过网盘链接获取公钥：</p>
<div class="highlight" id="id-12"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -u https://p3terx.com/key.pub</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从本地文件获取公钥">从本地文件获取公钥</h5>
<p>通过 FTP 的方式把公钥传到 VPS 上，然后指定公钥路径：</p>
<div class="highlight" id="id-13"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -f ~/key.pub</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="覆盖模式">覆盖模式</h4>
<p>使用覆盖模式（-o）将覆盖 /.ssh/authorized_keys 文件，之前的密钥会被完全替换掉，选项必须写在最前面才会生效，比如：</p>
<div class="highlight" id="id-14"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -o -g P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><p>或者</p>
<div class="highlight" id="id-15"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -og P3TERX</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="禁用密码登录">禁用密码登录</h4>
<p>在确定使用密钥能正常登录后禁用密码登录：</p>
<div class="highlight" id="id-16"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -d</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="修改-ssh-端口">修改 SSH 端口</h4>
<p>把 SSH 端口修改为 2222：</p>
<div class="highlight" id="id-17"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -p <span class="m">2222</span></span></span></code></pre></td></tr></table>
</div>
</div><h4 id="一键操作">一键操作</h4>
<p>安装密钥、修改端口、禁用密码登录一键操作：</p>
<div class="highlight" id="id-18"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash &lt;<span class="o">(</span>curl -fsSL git.io/key.sh<span class="o">)</span> -og P3TERX -p <span class="m">2222</span> -d</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>